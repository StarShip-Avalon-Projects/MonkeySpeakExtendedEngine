<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Monkeyspeak</name>
  </assembly>
  <members>
    <member name="T:Monkeyspeak.AbstractLexer">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.AbstractLexer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.#ctor(Monkeyspeak.MonkeyspeakEngine,Monkeyspeak.SStreamReader)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.AbstractLexer</parameter>
          </include>
        </markup>
      </summary>
      <param name="engine">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>engine</parameter>
            <parameter>M:Monkeyspeak.AbstractLexer.#ctor(Monkeyspeak.MonkeyspeakEngine,Monkeyspeak.SStreamReader)</parameter>
          </include>
        </markup>
      </param>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.AbstractLexer.#ctor(Monkeyspeak.MonkeyspeakEngine,Monkeyspeak.SStreamReader)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.CheckEOF(System.Int32)">
      <summary>
            Checks if the next input results in End of File.
            </summary>
      <param name="c">The c.</param>
      <exception cref="T:Monkeyspeak.MonkeyspeakException" />
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.CheckIsDigit(System.Char)">
      <summary>
            Checks if <paramref name="c" /> is a number.
            </summary>
      <param name="c">The c.</param>
      <exception cref="T:Monkeyspeak.MonkeyspeakException" />
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.CheckMatch(System.Char)">
      <summary>
            Checks if the next input is a match to <paramref name="c" />.
            </summary>
      <param name="c">The c.</param>
      <exception cref="T:Monkeyspeak.MonkeyspeakException" />
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.CheckMatch(System.Int32)">
      <summary>
            Checks if the next input is a match to <paramref name="c" />.
            </summary>
      <param name="c">The c.</param>
      <exception cref="T:Monkeyspeak.MonkeyspeakException" />
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.CheckMatch(System.String)">
      <summary>
            Checks if the next input is a match to <paramref name="str" />.
            </summary>
      <param name="str">The string.</param>
      <exception cref="T:Monkeyspeak.MonkeyspeakException" />
    </member>
    <member name="P:Monkeyspeak.AbstractLexer.CurrentSourcePosition">
      <summary>
            Gets the current source position.
            </summary>
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Monkeyspeak.AbstractLexer.Engine">
      <summary>
            Gets the engine.
            </summary>
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.LookAhead(System.Int32)">
      <summary>
            Looks ahead a specified number of chars and returns the result.
            </summary>
      <param name="amount">The amount.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.AbstractLexer.LookAhead(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.LookBack(System.Int32)">
      <summary>
            Looks back a specified number of chars and returns the result.
            </summary>
      <param name="amount">The amount.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.AbstractLexer.LookBack(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.Next">
      <summary>
            Advances one character in the reader.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.AbstractLexer.Next</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.Read">
      <summary>
            Reads the tokens from the reader.  Used by the Parser.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.AbstractLexer.Read</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.Read(System.Int64,System.Int32)">
      <summary>
            Reads the specified start position in stream.  Used by the Token to read the token's value.
            </summary>
      <param name="startPosInStream">The start position in stream.</param>
      <param name="length">The length.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.AbstractLexer.Read(System.Int64,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Monkeyspeak.AbstractLexer.reader">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.AbstractLexer.reader</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.AbstractLexer.Reset">
      <summary>
            Resets this instance.
            </summary>
    </member>
    <member name="T:Monkeyspeak.ConstantVariable">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.ConstantVariable</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.ConstantVariable.#ctor(Monkeyspeak.IVariable)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.ConstantVariable</parameter>
          </include>
        </markup>
      </summary>
      <param name="variable">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>variable</parameter>
            <parameter>M:Monkeyspeak.ConstantVariable.#ctor(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.ConstantVariable.#ctor(System.String,System.Object)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.ConstantVariable</parameter>
          </include>
        </markup>
      </summary>
      <param name="name">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Monkeyspeak.ConstantVariable.#ctor(System.String,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Monkeyspeak.ConstantVariable.#ctor(System.String,System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.ConstantVariable.Equals(Monkeyspeak.IVariable)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.ConstantVariable.Equals(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Monkeyspeak.ConstantVariable.Equals(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.ConstantVariable.Equals(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.ConstantVariable.IsConstant">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.ConstantVariable.IsConstant</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.ConstantVariable.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.ConstantVariable.Name</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.ConstantVariable.SetValue(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.ConstantVariable.SetValue(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Monkeyspeak.ConstantVariable.SetValue(System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.ConstantVariable.ToString">
      <summary>
            Returns a const identifier if the variable is constant followed by name,
            <para>otherwise just the name is returned.</para></summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.ConstantVariable.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.ConstantVariable.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.ConstantVariable.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.IVariable">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.IVariable</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.IVariable.IsConstant">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.IVariable.IsConstant</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.IVariable.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.IVariable.Name</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.IVariable.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.IVariable.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.Lexer">
      <summary>
                Converts a reader containing a Monkeyspeak script into a
            </summary>
    </member>
    <member name="M:Monkeyspeak.Lexer.#ctor(Monkeyspeak.MonkeyspeakEngine,Monkeyspeak.SStreamReader)">
      <summary>
            Initializes a new instance of the <see cref="T:Monkeyspeak.Lexer" /> class.
            </summary>
      <param name="engine">The engine.</param>
      <param name="reader">The reader.</param>
    </member>
    <member name="M:Monkeyspeak.Lexer.CheckEOF(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckEOF(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="c">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckEOF(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Lexer.CheckIsDigit(System.Char)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckIsDigit(System.Char)</parameter>
          </include>
        </markup>
      </summary>
      <param name="c">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckIsDigit(System.Char)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Lexer.CheckMatch(System.Char)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.Char)</parameter>
          </include>
        </markup>
      </summary>
      <param name="c">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.Char)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Lexer.CheckMatch(System.Char,System.Char)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.Char,System.Char)</parameter>
          </include>
        </markup>
      </summary>
      <param name="a">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.Char,System.Char)</parameter>
          </include>
        </markup>
      </param>
      <param name="b">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.Char,System.Char)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Lexer.CheckMatch(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="c">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Lexer.CheckMatch(System.Int32,System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="a">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="b">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Lexer.CheckMatch(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="str">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>str</parameter>
            <parameter>M:Monkeyspeak.Lexer.CheckMatch(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Lexer.CreateToken(Monkeyspeak.TokenType)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.CreateToken(Monkeyspeak.TokenType)</parameter>
          </include>
        </markup>
      </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Monkeyspeak.Lexer.CreateToken(Monkeyspeak.TokenType)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.CreateToken(Monkeyspeak.TokenType)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.CreateToken(Monkeyspeak.TokenType,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.CreateToken(Monkeyspeak.TokenType,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Monkeyspeak.Lexer.CreateToken(Monkeyspeak.TokenType,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="str">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>str</parameter>
            <parameter>M:Monkeyspeak.Lexer.CreateToken(Monkeyspeak.TokenType,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.CreateToken(Monkeyspeak.TokenType,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.Lexer.CurrentCharacter">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Lexer.CurrentCharacter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Lexer.CurrentSourcePosition">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Lexer.CurrentSourcePosition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Lexer.IsMatch(System.Char)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.IsMatch(System.Char)</parameter>
          </include>
        </markup>
      </summary>
      <param name="c">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:Monkeyspeak.Lexer.IsMatch(System.Char)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.IsMatch(System.Char)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.IsMatch(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.IsMatch(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="c">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:Monkeyspeak.Lexer.IsMatch(System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.IsMatch(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.IsMatch(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.IsMatch(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="str">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>str</parameter>
            <parameter>M:Monkeyspeak.Lexer.IsMatch(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.IsMatch(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.LookAhead(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.LookAhead(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="steps">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>steps</parameter>
            <parameter>M:Monkeyspeak.Lexer.LookAhead(System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.LookAhead(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.LookBack(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.LookBack(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="steps">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>steps</parameter>
            <parameter>M:Monkeyspeak.Lexer.LookBack(System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.LookBack(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.MatchNumber">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.MatchNumber</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.MatchNumber</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.MatchString">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.MatchString</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.MatchString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.MatchTrigger">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.MatchTrigger</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.MatchTrigger</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.MatchVariable">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.MatchVariable</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.MatchVariable</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.Next">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.Next</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.Next</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.Read">
      <summary>
            Reads the tokens from the reader.  Used by the Parser.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.Read</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.Read(System.Int64,System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.Read(System.Int64,System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="startPosInStream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>startPosInStream</parameter>
            <parameter>M:Monkeyspeak.Lexer.Read(System.Int64,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="length">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:Monkeyspeak.Lexer.Read(System.Int64,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Lexer.Read(System.Int64,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Lexer.Reset">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.Reset</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Lexer.SkipBlockComment">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.SkipBlockComment</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Lexer.SkipLineComment">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Lexer.SkipLineComment</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.MonkeyspeakEngine">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.MonkeyspeakEngine</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.MonkeyspeakEngine</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.#ctor(Monkeyspeak.Options)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.MonkeyspeakEngine</parameter>
          </include>
        </markup>
      </summary>
      <param name="options">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>options</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.#ctor(Monkeyspeak.Options)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Monkeyspeak.MonkeyspeakEngine.Banner">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.MonkeyspeakEngine.Banner</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.CompileToFile(Monkeyspeak.Page,System.String)">
      <summary>
            Compiles a Page to a file
            </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.CompileToFile(Monkeyspeak.Page,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="filePath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>filePath</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.CompileToFile(Monkeyspeak.Page,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.CompileToStream(Monkeyspeak.Page,System.IO.Stream)">
      <summary>
            Compiles a Page to a stream
            </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.CompileToStream(Monkeyspeak.Page,System.IO.Stream)</parameter>
          </include>
        </markup>
      </param>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.CompileToStream(Monkeyspeak.Page,System.IO.Stream)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadCompiledFile(System.String)">
      <summary>
            Loads compiled script from file
            </summary>
      <param name="filePath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>filePath</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadCompiledFile(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadCompiledFile(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadCompiledStream(System.IO.Stream)">
      <summary>
            Loads a compiled script from stream
            </summary>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadCompiledStream(System.IO.Stream)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadCompiledStream(System.IO.Stream)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadFromFile(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadFromFile(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="filePath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>filePath</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadFromFile(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadFromFile(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadFromStream(Monkeyspeak.Page,System.IO.Stream)">
      <summary>
            Loads a Monkeyspeak script from a Stream into <paramref name="existingPage" />.
            </summary>
      <param name="existingPage">Reference to an existing Page</param>
      <param name="stream">Stream that contains the Monkeyspeak script. Closes the stream.</param>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadFromStream(System.IO.Stream)">
      <summary>
            Loads a Monkeyspeak script from a Stream into a <see cref="T:Monkeyspeak.Page" />.
            </summary>
      <param name="stream">Stream that contains the Monkeyspeak script. Closes the stream.</param>
      <returns>
        <see cref="T:Monkeyspeak.Page" />
      </returns>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadFromStreamAsync(Monkeyspeak.Page,System.IO.Stream)">
      <summary>
            Loads a Monkeyspeak script from a Stream into a <see cref="T:Monkeyspeak.Page" />.
            </summary>
      <param name="stream">Stream that contains the Monkeyspeak script. Closes the stream.</param>
      <param name="existingPage"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadFromStreamAsync(Monkeyspeak.Page,System.IO.Stream)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadFromStreamAsync(System.IO.Stream)">
      <summary>
            Loads a Monkeyspeak script from a Stream into a <see cref="T:Monkeyspeak.Page" />.
            </summary>
      <param name="stream">Stream that contains the Monkeyspeak script. Closes the stream.</param>
      <returns>
        <see cref="T:Monkeyspeak.Page" />
      </returns>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadFromString(Monkeyspeak.Page,System.String)">
      <summary>
            Loads a Monkeyspeak script from a string into <paramref name="existingPage" />. and
            clears the old page
            </summary>
      <param name="existingPage">Reference to an existing Page</param>
      <param name="chunk">String that contains the Monkeyspeak script source.</param>
      <returns></returns>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadFromString(System.String)">
      <summary>
            Loads a Monkeyspeak script from a string into a <see cref="T:Monkeyspeak.Page" />.
            </summary>
      <param name="chunk">String that contains the Monkeyspeak script source.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadFromString(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadFromStringAsync(Monkeyspeak.Page,System.String)">
      <summary>
            Loads a Monkeyspeak script from a string into a <see cref="T:Monkeyspeak.Page" />.
            </summary>
      <param name="chunk">String that contains the Monkeyspeak script source.</param>
      <param name="existingPage"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadFromStringAsync(Monkeyspeak.Page,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakEngine.LoadFromStringAsync(System.String)">
      <summary>
            Loads a Monkeyspeak script from a string into a <see cref="T:Monkeyspeak.Page" />.
            </summary>
      <param name="chunk">String that contains the Monkeyspeak script source.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakEngine.LoadFromStringAsync(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Monkeyspeak.MonkeyspeakEngine.options">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.MonkeyspeakEngine.options</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.MonkeyspeakEngine.Options">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.MonkeyspeakEngine.Options</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="E:Monkeyspeak.MonkeyspeakEngine.Resetting">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>E:Monkeyspeak.MonkeyspeakEngine.Resetting</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Monkeyspeak.MonkeyspeakEngine.VisitTokens">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.MonkeyspeakEngine.VisitTokens</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.MonkeyspeakException">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.MonkeyspeakException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakException.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.MonkeyspeakException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.MonkeyspeakException</parameter>
          </include>
        </markup>
      </summary>
      <param name="info">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>info</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
      <param name="context">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>context</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakException.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.MonkeyspeakException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakException.#ctor(System.String,Monkeyspeak.lexical.SourcePosition)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.MonkeyspeakException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakException.#ctor(System.String,Monkeyspeak.lexical.SourcePosition)</parameter>
          </include>
        </markup>
      </param>
      <param name="pos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakException.#ctor(System.String,Monkeyspeak.lexical.SourcePosition)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakException.#ctor(System.String,System.Exception)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.MonkeyspeakException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
      <param name="inner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inner</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.MonkeyspeakException.#ctor(System.String,System.Object[])">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.MonkeyspeakException</parameter>
          </include>
        </markup>
      </summary>
      <param name="format">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>format</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakException.#ctor(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Monkeyspeak.MonkeyspeakException.#ctor(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.Options">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Options</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Options.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Options</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Options.BlockCommentBeginSymbol">
      <summary>
            Block Comment beginning literal symbol
            <para>Default: *</para></summary>
    </member>
    <member name="P:Monkeyspeak.Options.BlockCommentEndSymbol">
      <summary>
            Block Comment ending literal symbol
            <para>Default: *</para></summary>
    </member>
    <member name="P:Monkeyspeak.Options.CanOverrideTriggerHandlers">
      <summary>
            If set to TRUE then an existing TriggerHandler can be overridden by newer TriggerHandler
            <para>Default: false</para></summary>
    </member>
    <member name="P:Monkeyspeak.Options.Debug">
      <summary>
            Gets or sets a value indicating whether debug log output is enabled.
            </summary>
    </member>
    <member name="P:Monkeyspeak.Options.LineCommentSymbol">
      <summary>
            Comment literal symbol
            <para>Default: *</para></summary>
    </member>
    <member name="P:Monkeyspeak.Options.LoopLimit">
      <summary>
            Gets or sets the loop limit.
            </summary>
    </member>
    <member name="P:Monkeyspeak.Options.StringBeginSymbol">
      <summary>
            Beginning string literal symbol
            <para>Default: {</para></summary>
    </member>
    <member name="P:Monkeyspeak.Options.StringEndSymbol">
      <summary>
            Ending string literal symbol
            <para>Default: }</para></summary>
    </member>
    <member name="P:Monkeyspeak.Options.StringLengthLimit">
      <summary>
            Used to limit the maximum length of a string
            <para>Default: Int32.MaxValue</para></summary>
    </member>
    <member name="P:Monkeyspeak.Options.TriggerLimit">
      <summary>
            Used to limit the maximum amount of triggers per page
            <para>Default: 6000</para></summary>
    </member>
    <member name="P:Monkeyspeak.Options.VariableCountLimit">
      <summary>
            Used to limit the maximum amount of variables per page
            <para>Default: 1000</para></summary>
    </member>
    <member name="P:Monkeyspeak.Options.VariableDeclarationSymbol">
      <summary>
            Variable literal symbol
            <para>Default: %</para></summary>
    </member>
    <member name="P:Monkeyspeak.Options.VariableTableCountLimit">
      <summary>
            Gets or sets the variable table count limit.
            </summary>
    </member>
    <member name="P:Monkeyspeak.Options.Version">
      <summary>
            Current assembly version used internally by the compiler to handle versioning
            </summary>
    </member>
    <member name="T:Monkeyspeak.Page">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Page</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Page.#ctor(Monkeyspeak.MonkeyspeakEngine)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Page</parameter>
          </include>
        </markup>
      </summary>
      <param name="engine">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>engine</parameter>
            <parameter>M:Monkeyspeak.Page.#ctor(Monkeyspeak.MonkeyspeakEngine)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Page.AddBlocks(System.Collections.Generic.IEnumerable{Monkeyspeak.TriggerBlock})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.AddBlocks(System.Collections.Generic.IEnumerable{Monkeyspeak.TriggerBlock})</parameter>
          </include>
        </markup>
      </summary>
      <param name="blocks">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>blocks</parameter>
            <parameter>M:Monkeyspeak.Page.AddBlocks(System.Collections.Generic.IEnumerable{Monkeyspeak.TriggerBlock})</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="E:Monkeyspeak.Page.AfterTriggerHandled">
      <summary>
            Called after the Trigger's TriggerHandler is called.  If there is no TriggerHandler for that Trigger
            then this event is not raised.
            </summary>
    </member>
    <member name="E:Monkeyspeak.Page.BeforeTriggerHandled">
      <summary>
            Called before the Trigger's TriggerHandler is called.  If there is no TriggerHandler for that Trigger
            then this event is not raised.
            </summary>
    </member>
    <member name="M:Monkeyspeak.Page.CheckType(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.CheckType(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Monkeyspeak.Page.CheckType(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.CheckType(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.Clear">
      <summary>
            Removes the triggers.
            </summary>
    </member>
    <member name="M:Monkeyspeak.Page.CompileToFile(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.CompileToFile(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="filePath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>filePath</parameter>
            <parameter>M:Monkeyspeak.Page.CompileToFile(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Page.CompileToStream(System.IO.Stream)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.CompileToStream(System.IO.Stream)</parameter>
          </include>
        </markup>
      </summary>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.Page.CompileToStream(System.IO.Stream)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Monkeyspeak.Page.Debug">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Monkeyspeak.Page" /> is in debug mode.
            </summary>
    </member>
    <member name="M:Monkeyspeak.Page.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Monkeyspeak.Page.Engine">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Page.Engine</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="E:Monkeyspeak.Page.Error">
      <summary>
            Called when an Exception is raised during execution
            </summary>
    </member>
    <member name="M:Monkeyspeak.Page.Execute(Monkeyspeak.TriggerCategory,System.Int32,System.Object[])">
      <summary>
             Executes a trigger block containing <paramref name="cat" /> with ID equal to <paramref name="id" /></summary>
      <param name="id"></param>
      <param name="args"></param>
      <param name="cat">
        <see cref="T:Monkeyspeak.TriggerCategory" />
      </param>
    </member>
    <member name="M:Monkeyspeak.Page.Execute(System.Int32,System.Object[])">
      <summary>
             Executes a trigger block containing TriggerCategory.Cause with ID equal to <paramref name="id" /></summary>
      <param name="id"></param>
      <param name="args"></param>
    </member>
    <member name="M:Monkeyspeak.Page.Execute(System.Int32[],System.Object[])">
      <summary>
             Executes a trigger block containing TriggerCategory.Cause with ID equal to <param name="id" /></summary>
      <param name="ids">I dunno</param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Page.Execute(System.Int32[],System.Object[])</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Page.ExecuteAsync(Monkeyspeak.TriggerCategory,System.Int32,System.Object[])">
      <summary>
            Executes the specified Cause asynchronously.
            </summary>
      <param name="id">The id.</param>
      <param name="cat">
        <see cref="T:Monkeyspeak.TriggerCategory" />
      </param>
      <param name="args"></param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteAsync(Monkeyspeak.TriggerCategory,System.Int32,System.Object[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.ExecuteAsync(Monkeyspeak.TriggerCategory,System.Int32[],System.Object[])">
      <summary>
            Executes the specified Cause asynchronously.
            </summary>
      <param name="ids">The ids.</param>
      <param name="args"></param>
      <param name="cat">
        <see cref="T:Monkeyspeak.TriggerCategory" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteAsync(Monkeyspeak.TriggerCategory,System.Int32[],System.Object[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.ExecuteAsync(System.Int32[],System.Object[])">
      <summary>
            Executes the specified Cause asynchronously.
            </summary>
      <param name="ids">The ids.</param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteAsync(System.Int32[],System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteAsync(System.Int32[],System.Object[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.ExecuteAsync(System.Threading.CancellationToken,Monkeyspeak.TriggerCategory,System.Int32,System.Object[])">
      <summary>
            Executes the asynchronous.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <param name="id"></param>
      <param name="args"></param>
      <param name="cat">
        <see cref="T:Monkeyspeak.TriggerCategory" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteAsync(System.Threading.CancellationToken,Monkeyspeak.TriggerCategory,System.Int32,System.Object[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.ExecuteAsync(System.Threading.CancellationToken,Monkeyspeak.TriggerCategory,System.Int32[],System.Object[])">
      <summary>
            Executes the asynchronous.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <param name="ids">The ids.</param>
      <param name="args">todo: describe args parameter on ExecuteAsync</param>
      <param name="cat">
        <see cref="T:Monkeyspeak.TriggerCategory" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteAsync(System.Threading.CancellationToken,Monkeyspeak.TriggerCategory,System.Int32[],System.Object[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.ExecuteAsync(System.Threading.CancellationToken,System.Int32[],System.Object[])">
      <summary>
            Executes the asynchronous.
            </summary>
      <param name="cancellationToken">The cancellation token.</param>
      <param name="ids">The ids.</param>
      <param name="args">todo: describe args parameter on ExecuteAsync</param>
      <param name="cat">
        <see cref="T:Monkeyspeak.TriggerCategory" />
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteAsync(System.Threading.CancellationToken,System.Int32[],System.Object[])</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.ExecuteBlock(Monkeyspeak.TriggerBlock,System.Int32,System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteBlock(Monkeyspeak.TriggerBlock,System.Int32,System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="triggerBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>triggerBlock</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteBlock(Monkeyspeak.TriggerBlock,System.Int32,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="causeIndex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>causeIndex</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteBlock(Monkeyspeak.TriggerBlock,System.Int32,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteBlock(Monkeyspeak.TriggerBlock,System.Int32,System.Object[])</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Page.ExecuteTrigger(Monkeyspeak.TriggerBlock,System.Int32@,Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteTrigger(Monkeyspeak.TriggerBlock,System.Int32@,Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="triggerBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>triggerBlock</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteTrigger(Monkeyspeak.TriggerBlock,System.Int32@,Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <param name="index">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteTrigger(Monkeyspeak.TriggerBlock,System.Int32@,Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Page.ExecuteTrigger(Monkeyspeak.TriggerBlock,System.Int32@,Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Page.GenerateBlocks(Monkeyspeak.AbstractLexer)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.GenerateBlocks(Monkeyspeak.AbstractLexer)</parameter>
          </include>
        </markup>
      </summary>
      <param name="lexer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lexer</parameter>
            <parameter>M:Monkeyspeak.Page.GenerateBlocks(Monkeyspeak.AbstractLexer)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Page.GetLibrary``1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.GetLibrary``1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Page.GetLibrary``1</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.GetLibrary``1</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.GetTriggerDescription(Monkeyspeak.Trigger,System.Boolean)">
      <summary>
            Gets the description for a trigger
            </summary>
      <param name="excludeLibraryName">[true] hide library name, [false] show library name above triggers</param>
      <param name="trigger">todo: describe trigger parameter on GetTriggerDescription</param>
      <returns>string</returns>
    </member>
    <member name="M:Monkeyspeak.Page.GetTriggerDescriptions(System.Boolean)">
      <summary>
            Gets the description for all triggers
            </summary>
      <param name="excludeLibraryName">[true] hide library name, [false] show library name above triggers</param>
      <returns>IEnumerable of Triggers</returns>
    </member>
    <member name="M:Monkeyspeak.Page.GetVariable(System.String)">
      <summary>
            Gets a Variable with Name set to <paramref name="name" /><b>Throws Exception if Variable not found.</b></summary>
      <param name="name">The name of the Variable to retrieve</param>
      <returns>The variable found with the specified <paramref name="name" /> or throws Exception</returns>
    </member>
    <member name="F:Monkeyspeak.Page.handlers">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Page.handlers</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Page.HasVariable(System.String)">
      <summary>
            Checks the scope for the Variable with Name set to <paramref name="name" /></summary>
      <param name="name">The name of the Variable to retrieve</param>
      <returns>True on Variable found.  <para>False if Variable not found.</para></returns>
    </member>
    <member name="M:Monkeyspeak.Page.HasVariable``1(System.String,``0@)">
      <summary>
            Determines whether the specified variable exists.
            </summary>
      <param name="name">The name.</param>
      <param name="var">The variable.</param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Page.HasVariable``1(System.String,``0@)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <c>true</c> if the specified variable exists; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Monkeyspeak.Page.Initiate">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.Initiate</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="E:Monkeyspeak.Page.Initiating">
      <summary>
            Occurs when [initiating].  Best to call your variable additions in the event.
            </summary>
    </member>
    <member name="P:Monkeyspeak.Page.Libraries">
      <summary>
            Gets the libraries.
            </summary>
    </member>
    <member name="M:Monkeyspeak.Page.LoadAllLibraries">
      <summary>
            Loads all libraries.
            </summary>
    </member>
    <member name="M:Monkeyspeak.Page.LoadCompiledStream(System.IO.Stream)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.LoadCompiledStream(System.IO.Stream)</parameter>
          </include>
        </markup>
      </summary>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.Page.LoadCompiledStream(System.IO.Stream)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Page.LoadDebugLibrary">
      <summary>
            Loads Monkeyspeak Debug Library into this Page
            <para>Used for Debug breakpoint insertion. Won't work without Debugger attached.</para></summary>
    </member>
    <member name="M:Monkeyspeak.Page.LoadIOLibrary(System.String)">
      <summary>
            Loads Monkeyspeak IO Library into this Page
            <para>Used for File Input/Output operations</para></summary>
      <param name="authorizedPath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>authorizedPath</parameter>
            <parameter>M:Monkeyspeak.Page.LoadIOLibrary(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Page.LoadLibrary(Monkeyspeak.Libraries.BaseLibrary)">
      <summary>
            Loads a <see cref="T:Monkeyspeak.Libraries.BaseLibrary" /> into this Page
            </summary>
      <param name="lib"></param>
    </member>
    <member name="M:Monkeyspeak.Page.LoadLibraryFromAssembly(System.Reflection.Assembly)">
      <summary>
            Loads trigger handlers from a assembly instance
            </summary>
      <param name="asm">The assembly instance</param>
    </member>
    <member name="M:Monkeyspeak.Page.LoadLibraryFromAssembly(System.String)">
      <summary>
            Loads trigger handlers from a assembly dll file
            </summary>
      <param name="assemblyFile">The assembly in the local file system</param>
    </member>
    <member name="M:Monkeyspeak.Page.LoadMathLibrary">
      <summary>
            Loads Monkeyspeak Math Library into this Page
            <para>Used for Math operations (add, subtract, multiply, divide)</para></summary>
    </member>
    <member name="M:Monkeyspeak.Page.LoadStringLibrary">
      <summary>
            Loads Monkeyspeak String Library into this Page
            <para>Used for basic String operations</para></summary>
    </member>
    <member name="M:Monkeyspeak.Page.LoadSysLibrary">
      <summary>
            Loads Monkeyspeak Sys Library into this Page
            <para>Used for System operations involving the Environment or Operating System</para></summary>
    </member>
    <member name="M:Monkeyspeak.Page.LoadTimerLibrary(System.UInt32)">
      <summary>
            Loads Monkeyspeak Timer Library into this Page
            </summary>
      <param name="timersLimit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timersLimit</parameter>
            <parameter>M:Monkeyspeak.Page.LoadTimerLibrary(System.UInt32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Page.RemoveAllTriggerHandlers(Monkeyspeak.Libraries.BaseLibrary)">
      <summary>
            Removes all trigger handlers.
            </summary>
      <param name="lib">The library.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.RemoveAllTriggerHandlers(Monkeyspeak.Libraries.BaseLibrary)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.RemoveLibrary``1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.RemoveLibrary``1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Page.RemoveLibrary``1</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.RemoveLibrary``1</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.RemoveTriggerHandler(Monkeyspeak.Trigger)">
      <summary>
            Removes the trigger handler.
            </summary>
      <param name="trigger">The trigger.</param>
    </member>
    <member name="M:Monkeyspeak.Page.RemoveTriggerHandler(Monkeyspeak.TriggerCategory,System.Int32)">
      <summary>
            Removes the trigger handler.
            </summary>
      <param name="cat">The category.</param>
      <param name="id">The identifier.</param>
    </member>
    <member name="M:Monkeyspeak.Page.RemoveVariable(Monkeyspeak.IVariable)">
      <summary>
            Removes the variable.
            </summary>
      <param name="name">The name.</param>
      <param name="var">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>var</parameter>
            <parameter>M:Monkeyspeak.Page.RemoveVariable(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.RemoveVariable(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.RemoveVariable(System.String)">
      <summary>
            Removes the variable.
            </summary>
      <param name="name">The name.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.RemoveVariable(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Page.Reset(System.Boolean)">
      <summary>
            Clears all Variables and optionally clears all TriggerHandlers from this Page.
            </summary>
      <param name="resetTriggerHandlers">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resetTriggerHandlers</parameter>
            <parameter>M:Monkeyspeak.Page.Reset(System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="E:Monkeyspeak.Page.Resetting">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>E:Monkeyspeak.Page.Resetting</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Monkeyspeak.Page.scope">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Page.scope</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Page.Scope">
      <summary>
            All variables loaded into this page
            </summary>
    </member>
    <member name="M:Monkeyspeak.Page.SetTriggerHandler(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)">
      <summary>
            Assigns the TriggerHandler to <paramref name="trigger" /></summary>
      <param name="trigger">
        <see cref="T:Monkeyspeak.Trigger" />
      </param>
      <param name="handler">
        <see cref="T:Monkeyspeak.TriggerHandler" />
      </param>
      <param name="description">optional description of the trigger, normally the human readable form of the trigger
            <para>Example: "(0:1) when someone says something,"</para></param>
    </member>
    <member name="M:Monkeyspeak.Page.SetTriggerHandler(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)">
      <summary>
            Assigns the TriggerHandler to a trigger with <paramref name="category" /> and <paramref name="id" /></summary>
      <param name="category"></param>
      <param name="id"></param>
      <param name="handler"></param>
      <param name="description"></param>
    </member>
    <member name="M:Monkeyspeak.Page.SetVariable(System.String,System.Object,System.Boolean)">
      <summary>
            Sets the variable.
            </summary>
      <param name="name">The name.</param>
      <param name="value">The value.</param>
      <param name="isConstant">if set to <c>true</c> [is constant].</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.SetVariable(System.String,System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:Monkeyspeak.TypeNotSupportedException"></exception>
      <exception cref="T:System.Exception">Variable limit exceeded, operation failed.</exception>
    </member>
    <member name="M:Monkeyspeak.Page.SetVariable``1(``0)">
      <summary>
            Sets the variable.
            </summary>
      <param name="var">The variable.</param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Page.SetVariable``1(``0)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.SetVariable``1(``0)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:Monkeyspeak.TypeNotSupportedException"></exception>
      <exception cref="T:System.Exception">Variable limit exceeded, operation failed.</exception>
    </member>
    <member name="M:Monkeyspeak.Page.SetVariableTable(System.String,System.Boolean)">
      <summary>
            Sets the variable table.
            </summary>
      <param name="name">The name.</param>
      <param name="value">The value.</param>
      <param name="isConstant">if set to <c>true</c> [is constant].</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Page.SetVariableTable(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:Monkeyspeak.TypeNotSupportedException"></exception>
      <exception cref="T:System.Exception">Variable limit exceeded, operation failed.</exception>
    </member>
    <member name="P:Monkeyspeak.Page.Size">
      <summary>
            Returns the Trigger count on this Page.
            </summary>
      <returns></returns>
    </member>
    <member name="F:Monkeyspeak.Page.syncObj">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Page.syncObj</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="E:Monkeyspeak.Page.TriggerAdded">
      <summary>
            Called when a Trigger and TriggerHandler is added to the Page
            </summary>
    </member>
    <member name="M:Monkeyspeak.Page.TrimToLimit(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Page.TrimToLimit(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="limit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>limit</parameter>
            <parameter>M:Monkeyspeak.Page.TrimToLimit(System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Monkeyspeak.Page.VisitingToken">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Page.VisitingToken</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.Parser">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Parser</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Parser.#ctor(Monkeyspeak.MonkeyspeakEngine)">
      <summary>
            Initializes a new instance of the <see cref="T:Monkeyspeak.Parser" /> class.
            </summary>
      <param name="engine">The engine.</param>
    </member>
    <member name="M:Monkeyspeak.Parser.IntParse(System.String)">
      <summary>
            Ints the parse. (I love GhostDoc lol)
            </summary>
      <param name="value">The value.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Parser.IntParse(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Parser.Parse(Monkeyspeak.AbstractLexer)">
      <summary>
            Parses the specified lexer's tokens.
            </summary>
      <param name="lexer">The lexer.</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Parser.Parse(Monkeyspeak.AbstractLexer)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:Monkeyspeak.MonkeyspeakException"></exception>
      <exception cref="T:System.Exception">String length limit exceeded.</exception>
    </member>
    <member name="F:Monkeyspeak.Parser.VisitToken">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Parser.VisitToken</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.SStreamReader">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="detectEncodingFromByteOrderMarks">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>detectEncodingFromByteOrderMarks</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding)</parameter>
          </include>
        </markup>
      </param>
      <param name="encoding">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>encoding</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="encoding">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>encoding</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="detectEncodingFromByteOrderMarks">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>detectEncodingFromByteOrderMarks</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="encoding">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>encoding</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="detectEncodingFromByteOrderMarks">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>detectEncodingFromByteOrderMarks</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="bufferSize">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bufferSize</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="encoding">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>encoding</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="detectEncodingFromByteOrderMarks">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>detectEncodingFromByteOrderMarks</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="bufferSize">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bufferSize</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="leaveOpen">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>leaveOpen</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="detectEncodingFromByteOrderMarks">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>detectEncodingFromByteOrderMarks</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding)</parameter>
          </include>
        </markup>
      </param>
      <param name="encoding">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>encoding</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="encoding">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>encoding</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="detectEncodingFromByteOrderMarks">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>detectEncodingFromByteOrderMarks</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.SStreamReader</parameter>
          </include>
        </markup>
      </summary>
      <param name="path">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="encoding">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>encoding</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="detectEncodingFromByteOrderMarks">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>detectEncodingFromByteOrderMarks</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="bufferSize">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bufferSize</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.IsPreamble">
      <summary>
            Encoding can really haven't preamble
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.IsPreamble</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.SStreamReader.Position">
      <summary>
            Use this property for get and set real position in file.
            Position in BaseStream can be not right.
            </summary>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.Read">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.Read</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.Read</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.SStreamReader.ReadLine">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.ReadLine</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.SStreamReader.ReadLine</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Token">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Token</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Token.#ctor(Monkeyspeak.TokenType)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Token</parameter>
          </include>
        </markup>
      </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Monkeyspeak.Token.#ctor(Monkeyspeak.TokenType)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Token.#ctor(Monkeyspeak.TokenType,System.Int64,System.Int32,Monkeyspeak.lexical.SourcePosition)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Token</parameter>
          </include>
        </markup>
      </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Monkeyspeak.Token.#ctor(Monkeyspeak.TokenType,System.Int64,System.Int32,Monkeyspeak.lexical.SourcePosition)</parameter>
          </include>
        </markup>
      </param>
      <param name="valueStart">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>valueStart</parameter>
            <parameter>M:Monkeyspeak.Token.#ctor(Monkeyspeak.TokenType,System.Int64,System.Int32,Monkeyspeak.lexical.SourcePosition)</parameter>
          </include>
        </markup>
      </param>
      <param name="valueLength">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>valueLength</parameter>
            <parameter>M:Monkeyspeak.Token.#ctor(Monkeyspeak.TokenType,System.Int64,System.Int32,Monkeyspeak.lexical.SourcePosition)</parameter>
          </include>
        </markup>
      </param>
      <param name="position">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>position</parameter>
            <parameter>M:Monkeyspeak.Token.#ctor(Monkeyspeak.TokenType,System.Int64,System.Int32,Monkeyspeak.lexical.SourcePosition)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Token.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>Monkeyspeak.Token</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Token.GetValue(Monkeyspeak.AbstractLexer)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Token.GetValue(Monkeyspeak.AbstractLexer)</parameter>
          </include>
        </markup>
      </summary>
      <param name="lexer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lexer</parameter>
            <parameter>M:Monkeyspeak.Token.GetValue(Monkeyspeak.AbstractLexer)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Token.GetValue(Monkeyspeak.AbstractLexer)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.Token.Length">
      <summary>
            Gets or sets the length of the value to be looked up in the lexer.
            </summary>
    </member>
    <member name="F:Monkeyspeak.Token.None">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Token.None</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Token.op_Equality(Monkeyspeak.Token,Monkeyspeak.Token)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Token.op_Equality(Monkeyspeak.Token,Monkeyspeak.Token)</parameter>
          </include>
        </markup>
      </summary>
      <param name="a">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:Monkeyspeak.Token.op_Equality(Monkeyspeak.Token,Monkeyspeak.Token)</parameter>
          </include>
        </markup>
      </param>
      <param name="b">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:Monkeyspeak.Token.op_Equality(Monkeyspeak.Token,Monkeyspeak.Token)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Token.op_Equality(Monkeyspeak.Token,Monkeyspeak.Token)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Token.op_Inequality(Monkeyspeak.Token,Monkeyspeak.Token)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Token.op_Inequality(Monkeyspeak.Token,Monkeyspeak.Token)</parameter>
          </include>
        </markup>
      </summary>
      <param name="a">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:Monkeyspeak.Token.op_Inequality(Monkeyspeak.Token,Monkeyspeak.Token)</parameter>
          </include>
        </markup>
      </param>
      <param name="b">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:Monkeyspeak.Token.op_Inequality(Monkeyspeak.Token,Monkeyspeak.Token)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Token.op_Inequality(Monkeyspeak.Token,Monkeyspeak.Token)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.Token.Position">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Token.Position</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Token.ToString">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Token.ToString</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Token.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.Token.Type">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Token.Type</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Token.ValueStartPosition">
      <summary>
            Gets or sets the value start position within the lexer.
            </summary>
    </member>
    <member name="T:Monkeyspeak.TokenType">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.TokenType</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.TokenVisitorHandler">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.TokenVisitorHandler</parameter>
          </include>
        </markup>
      </summary>
      <param name="token">The token.</param>
      <returns></returns>
    </member>
    <member name="T:Monkeyspeak.Trigger">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Trigger</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Trigger.#ctor(Monkeyspeak.TriggerCategory,System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Trigger</parameter>
          </include>
        </markup>
      </summary>
      <param name="cat">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cat</parameter>
            <parameter>M:Monkeyspeak.Trigger.#ctor(Monkeyspeak.TriggerCategory,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Monkeyspeak.Trigger.#ctor(Monkeyspeak.TriggerCategory,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Trigger.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>Monkeyspeak.Trigger</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Trigger.Category">
      <summary>
            Gets the category.
            </summary>
    </member>
    <member name="M:Monkeyspeak.Trigger.Clone">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Trigger.Clone</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Trigger.Clone</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Monkeyspeak.Trigger.contents">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Trigger.contents</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Trigger.Contents">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Trigger.Contents</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Trigger.Equals(Monkeyspeak.Trigger)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
    </member>
    <member name="M:Monkeyspeak.Trigger.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Monkeyspeak.Trigger.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
    </member>
    <member name="P:Monkeyspeak.Trigger.Id">
      <summary>
            Gets the identifier.
            </summary>
    </member>
    <member name="M:Monkeyspeak.Trigger.op_Equality(Monkeyspeak.Trigger,Monkeyspeak.Trigger)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Trigger.op_Equality(Monkeyspeak.Trigger,Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </summary>
      <param name="a">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:Monkeyspeak.Trigger.op_Equality(Monkeyspeak.Trigger,Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </param>
      <param name="b">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:Monkeyspeak.Trigger.op_Equality(Monkeyspeak.Trigger,Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Trigger.op_Equality(Monkeyspeak.Trigger,Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Trigger.op_Inequality(Monkeyspeak.Trigger,Monkeyspeak.Trigger)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Trigger.op_Inequality(Monkeyspeak.Trigger,Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </summary>
      <param name="a">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:Monkeyspeak.Trigger.op_Inequality(Monkeyspeak.Trigger,Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </param>
      <param name="b">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:Monkeyspeak.Trigger.op_Inequality(Monkeyspeak.Trigger,Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Trigger.op_Inequality(Monkeyspeak.Trigger,Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Trigger.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="F:Monkeyspeak.Trigger.Undefined">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Trigger.Undefined</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.TriggerAddedEventHandler">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.TriggerAddedEventHandler</parameter>
          </include>
        </markup>
      </summary>
      <param name="trigger">The trigger.</param>
      <param name="handler">The handler.</param>
    </member>
    <member name="T:Monkeyspeak.TriggerBlock">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.TriggerBlock</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.TriggerBlock.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Monkeyspeak.TriggerBlock" /> class.
            </summary>
    </member>
    <member name="M:Monkeyspeak.TriggerBlock.#ctor(System.Collections.Generic.IEnumerable{Monkeyspeak.Trigger})">
      <summary>
            Initializes a new instance of the <see cref="T:Monkeyspeak.TriggerBlock" /> class.
            </summary>
      <param name="collection">The collection whose elements are copied to the new list.</param>
    </member>
    <member name="M:Monkeyspeak.TriggerBlock.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Monkeyspeak.TriggerBlock" /> class.
            </summary>
      <param name="initialCapacity">The initial capacity.</param>
    </member>
    <member name="M:Monkeyspeak.TriggerBlock.ContainsTrigger(Monkeyspeak.TriggerCategory,System.Int32)">
      <summary>
            Determines whether the block contains the trigger.
            </summary>
      <param name="cat">The category.</param>
      <param name="id">The identifier.</param>
      <returns>
        <c>true</c> if the block contains the trigger; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Monkeyspeak.TriggerBlock.GetSubBlock(System.Int32,System.Int32)">
      <summary>
            Creates a sub block.
            </summary>
      <param name="index">The index.</param>
      <param name="count">The count.  -1 will go to the end of the collection</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.TriggerBlock.GetSubBlock(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.TriggerBlock.IndexOfTrigger(Monkeyspeak.TriggerCategory,System.Int32,System.Int32)">
      <summary>
            Operates like IndexOf for Triggers
            </summary>
      <param name="cat">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cat</parameter>
            <parameter>M:Monkeyspeak.TriggerBlock.IndexOfTrigger(Monkeyspeak.TriggerCategory,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Monkeyspeak.TriggerBlock.IndexOfTrigger(Monkeyspeak.TriggerCategory,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="startIndex">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>startIndex</parameter>
            <parameter>M:Monkeyspeak.TriggerBlock.IndexOfTrigger(Monkeyspeak.TriggerCategory,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>Index of trigger or -1 if not found</returns>
    </member>
    <member name="M:Monkeyspeak.TriggerBlock.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Monkeyspeak.TriggerBlock.ToString(System.Char)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.TriggerBlock.ToString(System.Char)</parameter>
          </include>
        </markup>
      </summary>
      <param name="separator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>separator</parameter>
            <parameter>M:Monkeyspeak.TriggerBlock.ToString(System.Char)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.TriggerBlock.ToString(System.Char)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.TriggerCategory">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.TriggerCategory</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Monkeyspeak.TriggerCategory.Undefined">
      <summary>
            A trigger that was not defined.  You should never encounter this
            if you do then something isn't quite right.
            </summary>
    </member>
    <member name="F:Monkeyspeak.TriggerCategory.Cause">
      <summary>
            A trigger defined with a 0
            <para>Example: (0:1) when someone says something, </para></summary>
    </member>
    <member name="F:Monkeyspeak.TriggerCategory.Condition">
      <summary>
            A trigger defined with a 1
            <para>Example: (1:2) and they moved # units left, </para></summary>
    </member>
    <member name="F:Monkeyspeak.TriggerCategory.Effect">
      <summary>
            A trigger defined with a 5
            <para>Example: (5:1) print {Hello World} to the console. </para></summary>
    </member>
    <member name="T:Monkeyspeak.TriggerHandledEventHandler">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.TriggerHandledEventHandler</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.TriggerHandler">
      <summary>
            Used for handling triggers at runtime.
            </summary>
      <param name="reader"></param>
      <returns>True = Continue to the Next Trigger, False = Stop executing current block of Triggers</returns>
    </member>
    <member name="T:Monkeyspeak.TriggerHandlerAttribute">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.TriggerHandlerAttribute</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.TriggerHandlerAttribute.#ctor(Monkeyspeak.TriggerCategory,System.Int32,System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.TriggerHandlerAttribute</parameter>
          </include>
        </markup>
      </summary>
      <param name="category">Trigger Category</param>
      <param name="id">Trigger ID</param>
      <param name="description">Trigger Description</param>
    </member>
    <member name="P:Monkeyspeak.TriggerHandlerAttribute.Description">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.TriggerHandlerAttribute.Description</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Monkeyspeak.TriggerHandlerAttribute.owner">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.TriggerHandlerAttribute.owner</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.TriggerHandlerAttribute.Register(Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.TriggerHandlerAttribute.Register(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.TriggerHandlerAttribute.Register(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Monkeyspeak.TriggerHandlerAttribute.TriggerCategory">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.TriggerHandlerAttribute.TriggerCategory</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.TriggerHandlerAttribute.TriggerID">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.TriggerHandlerAttribute.TriggerID</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.TriggerHandlerErrorEvent">
      <summary>
            Event for any errors that occur during execution
            If not assigned Exceptions will be thrown.
            </summary>
      <param name="trigger"></param>
      <param name="ex"></param>
    </member>
    <member name="T:Monkeyspeak.TriggerReader">
      <summary>
            A Reader that is used to get Variables, Strings, and Numbers from Triggers
            </summary>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.#ctor(Monkeyspeak.Page,Monkeyspeak.TriggerBlock)">
      <summary>
            A Reader that is used to get Variables, Strings, and Numbers from Triggers
            </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.#ctor(Monkeyspeak.Page,Monkeyspeak.TriggerBlock)</parameter>
          </include>
        </markup>
      </param>
      <param name="trigger"></param>
      <param name="currentBlock">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>currentBlock</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.#ctor(Monkeyspeak.Page,Monkeyspeak.TriggerBlock)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Monkeyspeak.TriggerReader.CurrentBlock">
      <summary>
            Gets the current block of triggers.
            </summary>
    </member>
    <member name="P:Monkeyspeak.TriggerReader.CurrentBlockIndex">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.TriggerReader.CurrentBlockIndex</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.TriggerReader.Engine">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.TriggerReader.Engine</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.GetParameter``1(System.Int32)">
      <summary>
            Gets the parameter.
            </summary>
      <param name="index">The index.</param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.GetParameter``1(System.Int32)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.GetParameter``1(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.TriggerReader.Page">
      <summary>
            Gets the page.
            </summary>
    </member>
    <member name="P:Monkeyspeak.TriggerReader.Parameters">
      <summary>
            Gets or sets the parameters.
            </summary>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.PeekNumber">
      <summary>
            Peeks at the next value
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.PeekNumber</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.PeekString">
      <summary>
            Peeks at the next value
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.PeekString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.PeekVariable">
      <summary>
            Peeks at the next value
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.PeekVariable</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.PeekVariable``1">
      <summary>
            Peeks at the next value, if the next value is not of <typeparamref name="T" />, returns false.
            </summary>
      <typeparam name="T"></typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.PeekVariable``1</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.PeekVariableTable">
      <summary>
            Peeks at the next value
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.PeekVariableTable</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.ReadNumber">
      <summary>
            Reads the next Number available, throws TriggerReaderException on failure
            </summary>
      <returns>Number</returns>
      <exception cref="T:Monkeyspeak.TriggerReaderException"></exception>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.ReadString(System.Boolean)">
      <summary>
            Reads the next String, throws TriggerReaderException on failure
            </summary>
      <param name="processVariables">[true] process variables and replace them with their values; [false] do nothing</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.ReadString(System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
      <exception cref="T:Monkeyspeak.TriggerReaderException"></exception>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.ReadVariable(System.Boolean)">
      <summary>
            Reads the next Variable available, throws TriggerReaderException on failure
            </summary>
      <param name="addIfNotExist">Add the Variable if it doesn't exist and return that Variable with a Value equal to null.</param>
      <returns>Variable</returns>
      <exception cref="T:Monkeyspeak.TriggerReaderException"></exception>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.ReadVariableOrNumber">
      <summary>
            Reads the next Variable or Number available, throws TriggerReaderException on failure
            </summary>
      <returns>Number</returns>
      <exception cref="T:Monkeyspeak.TriggerReaderException"></exception>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.ReadVariableTable(System.Boolean)">
      <summary>
            Reads the next Variable table available and the key if there is one, throws TriggerReaderException on failure
            </summary>
      <param name="addIfNotExist">Add the Variable if it doesn't exist and return that Variable with a Value equal to null.</param>
      <returns>Variable</returns>
      <exception cref="T:Monkeyspeak.TriggerReaderException"></exception>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.Reset">
      <summary>
            Resets the reader's indexes to 0
            </summary>
    </member>
    <member name="P:Monkeyspeak.TriggerReader.Trigger">
      <summary>
            Gets the trigger.
            </summary>
    </member>
    <member name="P:Monkeyspeak.TriggerReader.TriggerCategory">
      <summary>
            Gets the trigger category.
            </summary>
    </member>
    <member name="P:Monkeyspeak.TriggerReader.TriggerId">
      <summary>
            Gets the trigger identifier.
            </summary>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.TryGetParameter``1(System.Int32,``0@)">
      <summary>
            Tries the get the parameter at the specified index.
            </summary>
      <param name="index">The index.</param>
      <param name="value">The value.</param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.TryGetParameter``1(System.Int32,``0@)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <c>true</c> on success; <c>false</c> otherwise</returns>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.TryReadNumber(System.Double@)">
      <summary>
            Tries the read a number from the trigger.
            </summary>
      <param name="number">The number.</param>
      <returns>true on success; otherwise false</returns>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.TryReadString(System.String@,System.Boolean)">
      <summary>
            Tries the read a string from the trigger.
            </summary>
      <param name="str">The string.</param>
      <param name="processVariables">if set to <c>true</c> [process variables].</param>
      <returns>true on success; false otherwise</returns>
    </member>
    <member name="M:Monkeyspeak.TriggerReader.TryReadVariable(Monkeyspeak.IVariable@,System.Boolean)">
      <summary>
            Trys to read the next Variable available
            </summary>
      <param name="var">Variable is assigned on success</param>
      <param name="addIfNotExist">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>addIfNotExist</parameter>
            <parameter>M:Monkeyspeak.TriggerReader.TryReadVariable(Monkeyspeak.IVariable@,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>bool on success</returns>
    </member>
    <member name="T:Monkeyspeak.TriggerReaderException">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.TriggerReaderException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.TriggerReaderException.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.TriggerReaderException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.TriggerReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.TriggerReaderException</parameter>
          </include>
        </markup>
      </summary>
      <param name="info">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>info</parameter>
            <parameter>M:Monkeyspeak.TriggerReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
      <param name="context">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>context</parameter>
            <parameter>M:Monkeyspeak.TriggerReaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.TriggerReaderException.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.TriggerReaderException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Monkeyspeak.TriggerReaderException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.TriggerReaderException.#ctor(System.String,System.Exception)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.TriggerReaderException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Monkeyspeak.TriggerReaderException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
      <param name="inner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inner</parameter>
            <parameter>M:Monkeyspeak.TriggerReaderException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.TypeNotSupportedException">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.TypeNotSupportedException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.TypeNotSupportedException.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.TypeNotSupportedException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.TypeNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.TypeNotSupportedException</parameter>
          </include>
        </markup>
      </summary>
      <param name="info">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>info</parameter>
            <parameter>M:Monkeyspeak.TypeNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
      <param name="context">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>context</parameter>
            <parameter>M:Monkeyspeak.TypeNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.TypeNotSupportedException.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.TypeNotSupportedException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Monkeyspeak.TypeNotSupportedException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.TypeNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.TypeNotSupportedException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Monkeyspeak.TypeNotSupportedException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
      <param name="inner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inner</parameter>
            <parameter>M:Monkeyspeak.TypeNotSupportedException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.Variable">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Variable</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Variable.#ctor(System.String,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Variable</parameter>
          </include>
        </markup>
      </summary>
      <param name="name">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Monkeyspeak.Variable.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="constant">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>constant</parameter>
            <parameter>M:Monkeyspeak.Variable.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Variable.#ctor(System.String,System.Object,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Variable</parameter>
          </include>
        </markup>
      </summary>
      <param name="name">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Monkeyspeak.Variable.#ctor(System.String,System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Monkeyspeak.Variable.#ctor(System.String,System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="constant">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>constant</parameter>
            <parameter>M:Monkeyspeak.Variable.#ctor(System.String,System.Object,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Variable.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>Monkeyspeak.Variable</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Variable.CheckType(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.CheckType(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="_value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_value</parameter>
            <parameter>M:Monkeyspeak.Variable.CheckType(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.CheckType(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.Clone(System.Boolean)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.Clone(System.Boolean)</parameter>
          </include>
        </markup>
      </summary>
      <param name="asConstant">Clone as Constant</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.Clone(System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.Equals(Monkeyspeak.IVariable)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.Equals(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Monkeyspeak.Variable.Equals(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.Equals(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.Equals(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.Equals(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Monkeyspeak.Variable.Equals(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.Equals(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="P:Monkeyspeak.Variable.IsConstant">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Variable.IsConstant</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Variable.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Variable.Name</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Monkeyspeak.Variable.NoValue">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Variable.NoValue</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Variable.op_Addition(Monkeyspeak.Variable,System.Double)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Addition(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </summary>
      <param name="varA">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varA</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Addition(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="num">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>num</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Addition(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Addition(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.op_Addition(Monkeyspeak.Variable,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Addition(Monkeyspeak.Variable,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="varA">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varA</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Addition(Monkeyspeak.Variable,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="str">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>str</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Addition(Monkeyspeak.Variable,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Addition(Monkeyspeak.Variable,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.op_Division(Monkeyspeak.Variable,System.Double)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Division(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </summary>
      <param name="varA">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varA</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Division(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="num">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>num</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Division(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Division(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.op_Equality(Monkeyspeak.Variable,Monkeyspeak.Variable)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Equality(Monkeyspeak.Variable,Monkeyspeak.Variable)</parameter>
          </include>
        </markup>
      </summary>
      <param name="varA">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varA</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Equality(Monkeyspeak.Variable,Monkeyspeak.Variable)</parameter>
          </include>
        </markup>
      </param>
      <param name="varB">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varB</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Equality(Monkeyspeak.Variable,Monkeyspeak.Variable)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Equality(Monkeyspeak.Variable,Monkeyspeak.Variable)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.op_Implicit(Monkeyspeak.Variable)~System.String">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Implicit(Monkeyspeak.Variable)~System.String</parameter>
          </include>
        </markup>
      </summary>
      <param name="var">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>var</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Implicit(Monkeyspeak.Variable)~System.String</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Implicit(Monkeyspeak.Variable)~System.String</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.op_Implicit(Monkeyspeak.Variable)~System.Double">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Implicit(Monkeyspeak.Variable)~System.Double</parameter>
          </include>
        </markup>
      </summary>
      <param name="var">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>var</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Implicit(Monkeyspeak.Variable)~System.Double</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Implicit(Monkeyspeak.Variable)~System.Double</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.op_Inequality(Monkeyspeak.Variable,Monkeyspeak.Variable)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Inequality(Monkeyspeak.Variable,Monkeyspeak.Variable)</parameter>
          </include>
        </markup>
      </summary>
      <param name="varA">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varA</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Inequality(Monkeyspeak.Variable,Monkeyspeak.Variable)</parameter>
          </include>
        </markup>
      </param>
      <param name="varB">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varB</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Inequality(Monkeyspeak.Variable,Monkeyspeak.Variable)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Inequality(Monkeyspeak.Variable,Monkeyspeak.Variable)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.op_Multiply(Monkeyspeak.Variable,System.Double)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Multiply(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </summary>
      <param name="varA">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varA</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Multiply(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="num">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>num</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Multiply(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Multiply(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.op_Subtraction(Monkeyspeak.Variable,System.Double)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Subtraction(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </summary>
      <param name="varA">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varA</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Subtraction(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="num">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>num</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Subtraction(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.op_Subtraction(Monkeyspeak.Variable,System.Double)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Variable.ToString">
      <summary>
            Returns a const identifier if the variable is constant followed by name,
            <para>otherwise just the name is returned.</para></summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Variable.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.Variable.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Variable.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.VariableEqualityComparer">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.VariableEqualityComparer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.VariableEqualityComparer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.VariableEqualityComparer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.VariableEqualityComparer.Equals(Monkeyspeak.IVariable,Monkeyspeak.IVariable)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.VariableEqualityComparer.Equals(Monkeyspeak.IVariable,Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </summary>
      <param name="x">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Monkeyspeak.VariableEqualityComparer.Equals(Monkeyspeak.IVariable,Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </param>
      <param name="y">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Monkeyspeak.VariableEqualityComparer.Equals(Monkeyspeak.IVariable,Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.VariableEqualityComparer.Equals(Monkeyspeak.IVariable,Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.VariableEqualityComparer.GetHashCode(Monkeyspeak.IVariable)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.VariableEqualityComparer.GetHashCode(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Monkeyspeak.VariableEqualityComparer.GetHashCode(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.VariableEqualityComparer.GetHashCode(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.VariableIsConstantException">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.VariableIsConstantException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.VariableIsConstantException.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.VariableIsConstantException</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.VariableIsConstantException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.VariableIsConstantException</parameter>
          </include>
        </markup>
      </summary>
      <param name="info">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>info</parameter>
            <parameter>M:Monkeyspeak.VariableIsConstantException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
      <param name="context">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>context</parameter>
            <parameter>M:Monkeyspeak.VariableIsConstantException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.VariableIsConstantException.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.VariableIsConstantException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Monkeyspeak.VariableIsConstantException.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.VariableIsConstantException.#ctor(System.String,System.Exception)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.VariableIsConstantException</parameter>
          </include>
        </markup>
      </summary>
      <param name="message">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Monkeyspeak.VariableIsConstantException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
      <param name="inner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inner</parameter>
            <parameter>M:Monkeyspeak.VariableIsConstantException.#ctor(System.String,System.Exception)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.VariableTable">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.VariableTable</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.VariableTable.#ctor(System.String,System.Boolean,System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.VariableTable</parameter>
          </include>
        </markup>
      </summary>
      <param name="name">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Monkeyspeak.VariableTable.#ctor(System.String,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="isConstant">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isConstant</parameter>
            <parameter>M:Monkeyspeak.VariableTable.#ctor(System.String,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="limit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>limit</parameter>
            <parameter>M:Monkeyspeak.VariableTable.#ctor(System.String,System.Boolean,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.VariableTable.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>Monkeyspeak.VariableTable</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.VariableTable.ActiveIndexer">
      <summary>
            Gets or sets the active string based indexer.
            </summary>
    </member>
    <member name="M:Monkeyspeak.VariableTable.Add(System.String,System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Add(System.String,System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="key">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Add(System.String,System.Object)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Add(System.String,System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.VariableTable.At(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.VariableTable.At(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
      <param name="index">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Monkeyspeak.VariableTable.At(System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.VariableTable.At(System.Int32)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.VariableTable.CheckType(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.VariableTable.CheckType(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="_value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>_value</parameter>
            <parameter>M:Monkeyspeak.VariableTable.CheckType(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.VariableTable.CheckType(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.VariableTable.Contains(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Contains(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="index">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Contains(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Contains(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.VariableTable.Contents">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.VariableTable.Contents</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.VariableTable.Count">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.VariableTable.Count</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.VariableTable.CurrentElementIndex">
      <summary>
            Gets the index of the current element.
            </summary>
    </member>
    <member name="M:Monkeyspeak.VariableTable.Equals(Monkeyspeak.IVariable)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Equals(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Equals(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Equals(Monkeyspeak.IVariable)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.VariableTable.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="P:Monkeyspeak.VariableTable.IsConstant">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.VariableTable.IsConstant</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.VariableTable.Item(System.Int32)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.VariableTable.Item(System.Int32)</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.VariableTable.Item(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.VariableTable.Item(System.String)</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.VariableTable.Limit">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.VariableTable.Limit</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.VariableTable.Name">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.VariableTable.Name</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.VariableTable.Next">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Next</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.VariableTable.Next</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.VariableTable.ResetIndex">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.VariableTable.ResetIndex</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.VariableTable.ToString">
      <summary>
            Returns a const identifier if the variable is constant followed by name,
            <para>otherwise just the name is returned.</para></summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.VariableTable.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.VariableTable.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.VariableTable.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Monkeyspeak.VariableTable.values">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.VariableTable.values</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.Extensions.ArrayExtensions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Extensions.ArrayExtensions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Extensions.ArrayExtensions.ToString``2(System.Collections.Generic.IDictionary{``0,``1},System.Char)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``2(System.Collections.Generic.IDictionary{``0,``1},System.Char)</parameter>
          </include>
        </markup>
      </summary>
      <param name="arr">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>arr</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``2(System.Collections.Generic.IDictionary{``0,``1},System.Char)</parameter>
          </include>
        </markup>
      </param>
      <param name="seperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>seperator</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``2(System.Collections.Generic.IDictionary{``0,``1},System.Char)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="K">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>K</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``2(System.Collections.Generic.IDictionary{``0,``1},System.Char)</parameter>
          </include>
        </markup>
      </typeparam>
      <typeparam name="V">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>V</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``2(System.Collections.Generic.IDictionary{``0,``1},System.Char)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``2(System.Collections.Generic.IDictionary{``0,``1},System.Char)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.Char)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.Char)</parameter>
          </include>
        </markup>
      </summary>
      <param name="arr">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>arr</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.Char)</parameter>
          </include>
        </markup>
      </param>
      <param name="seperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>seperator</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.Char)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.Char)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.Char)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="arr">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>arr</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="seperator">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>seperator</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.String)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.String)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Extensions.ArrayExtensions.ToString``1(``0[],System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Extensions.ObjectExtensions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Extensions.ObjectExtensions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Extensions.ObjectExtensions.As``1(System.Object,``0)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Extensions.ObjectExtensions.As``1(System.Object,``0)</parameter>
          </include>
        </markup>
      </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Monkeyspeak.Extensions.ObjectExtensions.As``1(System.Object,``0)</parameter>
          </include>
        </markup>
      </param>
      <param name="default">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>default</parameter>
            <parameter>M:Monkeyspeak.Extensions.ObjectExtensions.As``1(System.Object,``0)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Extensions.ObjectExtensions.As``1(System.Object,``0)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Extensions.ObjectExtensions.As``1(System.Object,``0)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Extensions.StringExtensions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Extensions.StringExtensions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Extensions.StringExtensions.EscapeForCSharp(System.Char)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Extensions.StringExtensions.EscapeForCSharp(System.Char)</parameter>
          </include>
        </markup>
      </summary>
      <param name="chr">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chr</parameter>
            <parameter>M:Monkeyspeak.Extensions.StringExtensions.EscapeForCSharp(System.Char)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Extensions.StringExtensions.EscapeForCSharp(System.Char)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Extensions.StringExtensions.EscapeForCSharp(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Extensions.StringExtensions.EscapeForCSharp(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="str">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>str</parameter>
            <parameter>M:Monkeyspeak.Extensions.StringExtensions.EscapeForCSharp(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Extensions.StringExtensions.EscapeForCSharp(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Extensions.VariablesExtension">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Extensions.VariablesExtension</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Extensions.VariablesExtension.ConvertToTable(Monkeyspeak.IVariable,Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Extensions.VariablesExtension.ConvertToTable(Monkeyspeak.IVariable,Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="var">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>var</parameter>
            <parameter>M:Monkeyspeak.Extensions.VariablesExtension.ConvertToTable(Monkeyspeak.IVariable,Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.Extensions.VariablesExtension.ConvertToTable(Monkeyspeak.IVariable,Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Extensions.VariablesExtension.ConvertToTable(Monkeyspeak.IVariable,Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.lexical.AbstractParser">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.AbstractParser</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.AbstractParser.#ctor(Monkeyspeak.MonkeyspeakEngine)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.AbstractParser</parameter>
          </include>
        </markup>
      </summary>
      <param name="engine">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>engine</parameter>
            <parameter>M:Monkeyspeak.lexical.AbstractParser.#ctor(Monkeyspeak.MonkeyspeakEngine)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="F:Monkeyspeak.lexical.AbstractParser.Engine">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.lexical.AbstractParser.Engine</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.AbstractParser.Parse(Monkeyspeak.AbstractLexer)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.AbstractParser.Parse(Monkeyspeak.AbstractLexer)</parameter>
          </include>
        </markup>
      </summary>
      <param name="lexer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lexer</parameter>
            <parameter>M:Monkeyspeak.lexical.AbstractParser.Parse(Monkeyspeak.AbstractLexer)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.AbstractParser.Parse(Monkeyspeak.AbstractLexer)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.lexical.Compiler">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.Compiler</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.Compiler.#ctor(Monkeyspeak.MonkeyspeakEngine)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.Compiler</parameter>
          </include>
        </markup>
      </summary>
      <param name="engine">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>engine</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.#ctor(Monkeyspeak.MonkeyspeakEngine)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.lexical.Compiler.CompileToStream(System.Collections.Generic.List{Monkeyspeak.TriggerBlock},System.IO.Stream)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.CompileToStream(System.Collections.Generic.List{Monkeyspeak.TriggerBlock},System.IO.Stream)</parameter>
          </include>
        </markup>
      </summary>
      <param name="triggerBlocks">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>triggerBlocks</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.CompileToStream(System.Collections.Generic.List{Monkeyspeak.TriggerBlock},System.IO.Stream)</parameter>
          </include>
        </markup>
      </param>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.CompileToStream(System.Collections.Generic.List{Monkeyspeak.TriggerBlock},System.IO.Stream)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.lexical.Compiler.DecompileFromStream(System.IO.Stream)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.DecompileFromStream(System.IO.Stream)</parameter>
          </include>
        </markup>
      </summary>
      <param name="stream">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.DecompileFromStream(System.IO.Stream)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.DecompileFromStream(System.IO.Stream)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.lexical.Compiler.ReadVersion1(System.IO.BinaryReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.ReadVersion1(System.IO.BinaryReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.ReadVersion1(System.IO.BinaryReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.ReadVersion1(System.IO.BinaryReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.lexical.Compiler.ReadVersion6_5(System.IO.BinaryReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.ReadVersion6_5(System.IO.BinaryReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.ReadVersion6_5(System.IO.BinaryReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Compiler.ReadVersion6_5(System.IO.BinaryReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.lexical.Compiler.Version">
      <summary>
            Compiler version number
            </summary>
    </member>
    <member name="T:Monkeyspeak.lexical.SourcePosition">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.SourcePosition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.SourcePosition.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.SourcePosition</parameter>
          </include>
        </markup>
      </summary>
      <param name="line">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>line</parameter>
            <parameter>M:Monkeyspeak.lexical.SourcePosition.#ctor(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="column">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>column</parameter>
            <parameter>M:Monkeyspeak.lexical.SourcePosition.#ctor(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
      <param name="rawPos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rawPos</parameter>
            <parameter>M:Monkeyspeak.lexical.SourcePosition.#ctor(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Monkeyspeak.lexical.SourcePosition.Column">
      <summary>
            Gets the column.
            </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.SourcePosition.Equals(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.SourcePosition.Equals(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Monkeyspeak.lexical.SourcePosition.Equals(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.SourcePosition.Equals(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.lexical.SourcePosition.Line">
      <summary>
            Gets the line.
            </summary>
    </member>
    <member name="P:Monkeyspeak.lexical.SourcePosition.RawPosition">
      <summary>
            Gets the raw character position.  Useful for looking up the location from a string.Substring call.
            </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.SourcePosition.ToString">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.SourcePosition.ToString</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.SourcePosition.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.lexical.Expressions.Expression">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.Expressions.Expression</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.Expression.#ctor(Monkeyspeak.lexical.SourcePosition@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.Expressions.Expression</parameter>
          </include>
        </markup>
      </summary>
      <param name="pos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.#ctor(Monkeyspeak.lexical.SourcePosition@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.Expression.CompareTo(Monkeyspeak.lexical.Expressions.Expression)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.CompareTo(Monkeyspeak.lexical.Expressions.Expression)</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.CompareTo(Monkeyspeak.lexical.Expressions.Expression)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.CompareTo(Monkeyspeak.lexical.Expressions.Expression)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.Expression.Equals(Monkeyspeak.lexical.Expressions.Expression)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.Equals(Monkeyspeak.lexical.Expressions.Expression)</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.Equals(Monkeyspeak.lexical.Expressions.Expression)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.Equals(Monkeyspeak.lexical.Expressions.Expression)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.Expression.Equals(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.Equals(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.Equals(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.Equals(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.lexical.Expressions.Expression.Position">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.Expressions.Expression.Position</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.Expression.ToString">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.ToString</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.lexical.Expressions.Expression.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.Expressions.Expression.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.lexical.Expressions.Expression`1">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.Expressions.Expression`1</parameter>
          </include>
        </markup>
      </summary>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:Monkeyspeak.lexical.Expressions.Expression`1</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.Expression`1.#ctor(Monkeyspeak.lexical.SourcePosition@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.Expressions.Expression`1</parameter>
          </include>
        </markup>
      </summary>
      <param name="pos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.#ctor(Monkeyspeak.lexical.SourcePosition@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.Expression`1.CompareTo(Monkeyspeak.lexical.Expressions.Expression{`0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.CompareTo(Monkeyspeak.lexical.Expressions.Expression{`0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.CompareTo(Monkeyspeak.lexical.Expressions.Expression{`0})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.CompareTo(Monkeyspeak.lexical.Expressions.Expression{`0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.Expression`1.Equals(Monkeyspeak.lexical.Expressions.Expression{`0})">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.Equals(Monkeyspeak.lexical.Expressions.Expression{`0})</parameter>
          </include>
        </markup>
      </summary>
      <param name="other">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.Equals(Monkeyspeak.lexical.Expressions.Expression{`0})</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.Equals(Monkeyspeak.lexical.Expressions.Expression{`0})</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.Expression`1.Equals(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.Equals(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.Equals(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.Equals(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.Expression`1.ToString">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.ToString</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.Expression`1.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.lexical.Expressions.Expression`1.Value">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.Expressions.Expression`1.Value</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.lexical.Expressions.IExpression">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.Expressions.IExpression</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.lexical.Expressions.IExpression.Position">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.Expressions.IExpression.Position</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.lexical.Expressions.NullExpression">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.Expressions.NullExpression</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.NullExpression.#ctor(Monkeyspeak.lexical.SourcePosition@)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.Expressions.NullExpression</parameter>
          </include>
        </markup>
      </summary>
      <param name="pos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.NullExpression.#ctor(Monkeyspeak.lexical.SourcePosition@)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.NullExpression.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>Monkeyspeak.lexical.Expressions.NullExpression</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.lexical.Expressions.NullExpression.Instance">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.Expressions.NullExpression.Instance</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.lexical.Expressions.NumberExpression">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.Expressions.NumberExpression</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.NumberExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.Double)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.Expressions.NumberExpression</parameter>
          </include>
        </markup>
      </summary>
      <param name="pos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.NumberExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="num">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>num</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.NumberExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.Double)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.lexical.Expressions.StringExpression">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.Expressions.StringExpression</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.StringExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.Expressions.StringExpression</parameter>
          </include>
        </markup>
      </summary>
      <param name="pos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.StringExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="value">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.StringExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.lexical.Expressions.VariableExpression">
      <summary>
            Expression pointing to a Variable reference
            <para>This expression does not have the value of the variable because the variable would not have been assigned yet</para></summary>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.VariableExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.Expressions.VariableExpression</parameter>
          </include>
        </markup>
      </summary>
      <param name="pos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.VariableExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="varRef">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varRef</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.VariableExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.lexical.Expressions.VariableTableExpression">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.Expressions.VariableTableExpression</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.Expressions.VariableTableExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.String,System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.Expressions.VariableTableExpression</parameter>
          </include>
        </markup>
      </summary>
      <param name="pos">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.VariableTableExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="varRef">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varRef</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.VariableTableExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="indexer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>indexer</parameter>
            <parameter>M:Monkeyspeak.lexical.Expressions.VariableTableExpression.#ctor(Monkeyspeak.lexical.SourcePosition@,System.String,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Monkeyspeak.lexical.Expressions.VariableTableExpression.HasIndex">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.Expressions.VariableTableExpression.HasIndex</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.lexical.Expressions.VariableTableExpression.Indexer">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.Expressions.VariableTableExpression.Indexer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition.Create(Monkeyspeak.AbstractLexer,Monkeyspeak.SStreamReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition.Create(Monkeyspeak.AbstractLexer,Monkeyspeak.SStreamReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="lexer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lexer</parameter>
            <parameter>M:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition.Create(Monkeyspeak.AbstractLexer,Monkeyspeak.SStreamReader)</parameter>
          </include>
        </markup>
      </param>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition.Create(Monkeyspeak.AbstractLexer,Monkeyspeak.SStreamReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition.Create(Monkeyspeak.AbstractLexer,Monkeyspeak.SStreamReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition.StartCharacter">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition.StartCharacter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition.Type">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.TokenDefinitions.ITokenDefinition.Type</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.#ctor(System.Char)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.lexical.TokenDefinitions.VariableDefinition</parameter>
          </include>
        </markup>
      </summary>
      <param name="varChar">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>varChar</parameter>
            <parameter>M:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.#ctor(System.Char)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.Create(Monkeyspeak.AbstractLexer,Monkeyspeak.SStreamReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.Create(Monkeyspeak.AbstractLexer,Monkeyspeak.SStreamReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="lexer">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lexer</parameter>
            <parameter>M:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.Create(Monkeyspeak.AbstractLexer,Monkeyspeak.SStreamReader)</parameter>
          </include>
        </markup>
      </param>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.Create(Monkeyspeak.AbstractLexer,Monkeyspeak.SStreamReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.Create(Monkeyspeak.AbstractLexer,Monkeyspeak.SStreamReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.StartCharacter">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.StartCharacter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.Type">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.lexical.TokenDefinitions.VariableDefinition.Type</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.Libraries.Attributes">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Libraries.Attributes</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Attributes.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.Attributes</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Attributes.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>Monkeyspeak.Libraries.Attributes</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="trigger">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trigger</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="handler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>handler</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="description">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>description</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="cat">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cat</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="handler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>handler</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="description">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>description</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Attributes.AddDescription(Monkeyspeak.Trigger,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.AddDescription(Monkeyspeak.Trigger,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="trigger">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trigger</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.AddDescription(Monkeyspeak.Trigger,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="description">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>description</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.AddDescription(Monkeyspeak.Trigger,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Attributes.Initialize">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Initialize</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Monkeyspeak.Libraries.Attributes.Instance">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Libraries.Attributes.Instance</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Attributes.Unload(Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.Libraries.Attributes.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.Libraries.AutoIncrementBaseLibrary">
      <summary>
            Automatically increments the Trigger Id for each Trigger category so that you don't have to deal with it!
            </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.AutoIncrementBaseLibrary</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)">
      <summary>
            Registers a Trigger to the TriggerHandler with optional description
            </summary>
      <param name="trigger">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trigger</parameter>
            <parameter>M:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="handler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>handler</parameter>
            <parameter>M:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="description">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>description</parameter>
            <parameter>M:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.Add(Monkeyspeak.TriggerCategory,Monkeyspeak.TriggerHandler,System.String)">
      <summary>
            Registers a Trigger to the TriggerHandler with optional description
            </summary>
      <param name="cat">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cat</parameter>
            <parameter>M:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.Add(Monkeyspeak.TriggerCategory,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="id"></param>
      <param name="handler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>handler</parameter>
            <parameter>M:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.Add(Monkeyspeak.TriggerCategory,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="description">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>description</parameter>
            <parameter>M:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.Add(Monkeyspeak.TriggerCategory,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.BaseId">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Libraries.AutoIncrementBaseLibrary.BaseId</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.Libraries.BaseLibrary">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Libraries.BaseLibrary</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.#ctor">
      <summary>
            Base abstract class for Monkeyspeak Libraries
            </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)">
      <summary>
            Registers a Trigger to the TriggerHandler with optional description
            </summary>
      <param name="trigger">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trigger</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="handler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>handler</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="description">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>description</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.Add(Monkeyspeak.Trigger,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)">
      <summary>
            Registers a Trigger to the TriggerHandler with optional description
            </summary>
      <param name="cat">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cat</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="handler">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>handler</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="description">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>description</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.Add(Monkeyspeak.TriggerCategory,System.Int32,Monkeyspeak.TriggerHandler,System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.Contains(Monkeyspeak.Trigger)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.Contains(Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </summary>
      <param name="trigger">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trigger</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.Contains(Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.Contains(Monkeyspeak.Trigger)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Monkeyspeak.Libraries.BaseLibrary.descriptions">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Libraries.BaseLibrary.descriptions</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.GetAllLibraries">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.GetAllLibraries</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.GetAllLibraries</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.GetLibrariesFromAssembly(System.Reflection.Assembly)">
      <summary>
            Loads trigger handlers from a assembly instance
            </summary>
      <param name="asm">The assembly instance</param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.GetLibrariesFromAssembly(System.Reflection.Assembly)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Monkeyspeak.Libraries.BaseLibrary.handlers">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Libraries.BaseLibrary.handlers</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Libraries.BaseLibrary.Handlers">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Libraries.BaseLibrary.Handlers</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.Initialize">
      <summary>
            Initializes this instance.  Add your trigger handlers here.
            </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.RaiseError(System.String)">
      <summary>
            Raises a MonkeyspeakException
            </summary>
      <param name="reason">Reason for the error</param>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.ToString">
      <summary>
            Builds a string representation of the descriptions of each trigger.
            </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.ToString(Monkeyspeak.Trigger,System.Boolean,System.Boolean)">
      <summary>
            Builds a string representation of the descriptions of <paramref name="trigger" />.
            </summary>
      <param name="trigger">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trigger</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.ToString(Monkeyspeak.Trigger,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="excludeLibraryName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>excludeLibraryName</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.ToString(Monkeyspeak.Trigger,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="excludeDescriptions">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>excludeDescriptions</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.ToString(Monkeyspeak.Trigger,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.ToString(Monkeyspeak.Trigger,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.ToString(System.Boolean,System.Boolean)">
      <summary>
            Builds a string representation of the descriptions of each trigger.
            </summary>
      <param name="excludeLibraryName">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>excludeLibraryName</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.ToString(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <param name="excludeDescriptions">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>excludeDescriptions</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.ToString(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.BaseLibrary.ToString(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.BaseLibrary.Unload(Monkeyspeak.Page)">
      <summary>
            Called when page is disposing or resetting.
            </summary>
      <param name="page">The page.</param>
    </member>
    <member name="T:Monkeyspeak.Libraries.Debug">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Libraries.Debug</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Debug.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.Debug</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Debug.CreateBreakPoint(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Debug.CreateBreakPoint(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Debug.CreateBreakPoint(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Debug.CreateBreakPoint(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Debug.Initialize">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Debug.Initialize</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Debug.Unload(Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Debug.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.Libraries.Debug.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Debug.WhenBreakpointHit(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Debug.WhenBreakpointHit(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Debug.WhenBreakpointHit(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Debug.WhenBreakpointHit(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Libraries.IO">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Libraries.IO</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.IO</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.#ctor(System.String)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.IO</parameter>
          </include>
        </markup>
      </summary>
      <param name="authorizedPath">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>authorizedPath</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.#ctor(System.String)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.AppendToFile(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.AppendToFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.AppendToFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.AppendToFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.CanReadFile(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.CanReadFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.CanReadFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.CanReadFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.CanWriteFile(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.CanWriteFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.CanWriteFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.CanWriteFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.CreateFile(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.CreateFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.CreateFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.CreateFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.DeleteFile(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.DeleteFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.DeleteFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.DeleteFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.FileExists(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.FileExists(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.FileExists(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.FileExists(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.FileNotExists(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.FileNotExists(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.FileNotExists(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.FileNotExists(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.Initialize">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.Initialize</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.ReadFileIntoVariable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.ReadFileIntoVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.ReadFileIntoVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.ReadFileIntoVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.IO.Unload(Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.Libraries.IO.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.Libraries.Loops">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Libraries.Loops</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Loops.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.Loops</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Loops.AfterLoopIsDone(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.AfterLoopIsDone(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.AfterLoopIsDone(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.AfterLoopIsDone(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.Libraries.Loops.BaseId">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Libraries.Loops.BaseId</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Loops.BreakCurrentFlow(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.BreakCurrentFlow(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.BreakCurrentFlow(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.BreakCurrentFlow(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Loops.Initialize">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.Initialize</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Loops.Unload(Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Loops.WhileVarIsNotString(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsNotString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsNotString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsNotString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Loops.WhileVarIsNotValue(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsNotValue(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsNotValue(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsNotValue(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Loops.WhileVarIsString(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Loops.WhileVarIsValue(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsValue(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsValue(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Loops.WhileVarIsValue(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Libraries.Math">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Libraries.Math</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.Math</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.AddToVariable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.AddToVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.AddToVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.AddToVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.DivideByVariable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.DivideByVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.DivideByVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.DivideByVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.Initialize">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.Initialize</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.MultiplyByVariable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.MultiplyByVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.MultiplyByVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.MultiplyByVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.SubtractFromVariable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.SubtractFromVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.SubtractFromVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.SubtractFromVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.Unload(Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.VariableGreaterThan(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableGreaterThan(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableGreaterThan(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableGreaterThan(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.VariableGreaterThanOrEqual(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableGreaterThanOrEqual(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableGreaterThanOrEqual(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableGreaterThanOrEqual(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.VariableLessThan(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableLessThan(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableLessThan(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableLessThan(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Math.VariableLessThanOrEqual(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableLessThanOrEqual(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableLessThanOrEqual(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Math.VariableLessThanOrEqual(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Libraries.StringOperations">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Libraries.StringOperations</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.StringOperations.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.StringOperations</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.StringOperations.AddStringToVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.AddStringToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.AddStringToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.AddStringToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.StringOperations.IndexOfStringToVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.IndexOfStringToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.IndexOfStringToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.IndexOfStringToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.StringOperations.Initialize">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.Initialize</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.StringOperations.PutWordCountIntoVariable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.PutWordCountIntoVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.PutWordCountIntoVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.PutWordCountIntoVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.StringOperations.SubStringToVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.SubStringToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.SubStringToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.SubStringToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.StringOperations.Unload(Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.Libraries.StringOperations.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.Libraries.Sys">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Libraries.Sys</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.Sys</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.CallJob(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.CallJob(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.CallJob(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.CallJob(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.DeleteVariable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.DeleteVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.DeleteVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.DeleteVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.GetEnvVariable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.GetEnvVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.GetEnvVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.GetEnvVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.Initialize">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.Initialize</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.IsVariableDefined(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableDefined(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableDefined(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableDefined(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.IsVariableEqualToNumberOrVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableEqualToNumberOrVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableEqualToNumberOrVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableEqualToNumberOrVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.IsVariableEqualToString(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableEqualToString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableEqualToString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableEqualToString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.IsVariableNotDefined(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableNotDefined(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableNotDefined(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableNotDefined(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.IsVariableNotEqualToNumberOrVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableNotEqualToNumberOrVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableNotEqualToNumberOrVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableNotEqualToNumberOrVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.IsVariableNotEqualToString(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableNotEqualToString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableNotEqualToString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.IsVariableNotEqualToString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.JobCalled(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.JobCalled(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.JobCalled(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.JobCalled(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.LoadLibraryFromFile(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.LoadLibraryFromFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.LoadLibraryFromFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.LoadLibraryFromFile(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.PrintToConsole(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.PrintToConsole(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.PrintToConsole(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.PrintToConsole(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.RandomValueToVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.RandomValueToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.RandomValueToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.RandomValueToVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.SetVariableToNumberOrVariable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.SetVariableToNumberOrVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.SetVariableToNumberOrVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.SetVariableToNumberOrVariable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.SetVariableToString(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.SetVariableToString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.SetVariableToString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.SetVariableToString(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.Unload(Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.VariableIsConstant(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.VariableIsConstant(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.VariableIsConstant(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.VariableIsConstant(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Sys.VariableIsNotConstant(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.VariableIsNotConstant(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.VariableIsNotConstant(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Sys.VariableIsNotConstant(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Libraries.Tables">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Libraries.Tables</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Tables.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.Tables</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Libraries.Tables.BaseId">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Libraries.Tables.BaseId</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Tables.CreateTable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.CreateTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.CreateTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.CreateTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Tables.ForEntryInTable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.ForEntryInTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.ForEntryInTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.ForEntryInTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Tables.GetTableKeyIntoVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.GetTableKeyIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.GetTableKeyIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.GetTableKeyIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Tables.Initialize">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.Initialize</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Tables.PutNumIntoTable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.PutNumIntoTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.PutNumIntoTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.PutNumIntoTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Tables.PutStringIntoTable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.PutStringIntoTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.PutStringIntoTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.PutStringIntoTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Tables.Unload(Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Tables.VariableIsNotTable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.VariableIsNotTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.VariableIsNotTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.VariableIsNotTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Tables.VariableIsTable(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.VariableIsTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.VariableIsTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Tables.VariableIsTable(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Libraries.Timers">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Libraries.Timers</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Libraries.Timers</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.#ctor(System.UInt32)">
      <summary>
            Default Timer Library.  Call static method Timers.DestroyTimers() when your application closes.
            </summary>
      <param name="timersLimit">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timersLimit</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.#ctor(System.UInt32)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>Monkeyspeak.Libraries.Timers</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.AndTimerIsNotRunning(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.AndTimerIsNotRunning(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.AndTimerIsNotRunning(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.AndTimerIsNotRunning(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.AndTimerIsRunning(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.AndTimerIsRunning(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.AndTimerIsRunning(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.AndTimerIsRunning(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.CreateTimer(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.CreateTimer(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.CreateTimer(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.CreateTimer(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="F:Monkeyspeak.Libraries.Timers.CurrentTimer">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Libraries.Timers.CurrentTimer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.DestroyTimer(Monkeyspeak.Libraries.TimerTask)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.DestroyTimer(Monkeyspeak.Libraries.TimerTask)</parameter>
          </include>
        </markup>
      </summary>
      <param name="task">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>task</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.DestroyTimer(Monkeyspeak.Libraries.TimerTask)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.GetCurrentDayOfMonthIntoVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentDayOfMonthIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentDayOfMonthIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentDayOfMonthIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.GetCurrentHourIntoVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentHourIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentHourIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentHourIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.GetCurrentMinutesIntoVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentMinutesIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentMinutesIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentMinutesIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.GetCurrentMonthIntoVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentMonthIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentMonthIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentMonthIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.GetCurrentSecondsIntoVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentSecondsIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentSecondsIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentSecondsIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.GetCurrentTimerIntoVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentTimerIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentTimerIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentTimerIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.GetCurrentUpTimeIntoVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentUpTimeIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentUpTimeIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentUpTimeIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.GetCurrentYearIntoVar(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentYearIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentYearIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.GetCurrentYearIntoVar(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.Initialize">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.Initialize</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.PauseScriptExecution(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.PauseScriptExecution(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.PauseScriptExecution(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.PauseScriptExecution(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.StopTimer(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.StopTimer(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.StopTimer(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.StopTimer(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.TryGetTimerFrom(Monkeyspeak.TriggerReader,Monkeyspeak.Libraries.TimerTask@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.TryGetTimerFrom(Monkeyspeak.TriggerReader,Monkeyspeak.Libraries.TimerTask@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.TryGetTimerFrom(Monkeyspeak.TriggerReader,Monkeyspeak.Libraries.TimerTask@)</parameter>
          </include>
        </markup>
      </param>
      <param name="timerTask">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timerTask</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.TryGetTimerFrom(Monkeyspeak.TriggerReader,Monkeyspeak.Libraries.TimerTask@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.TryGetTimerFrom(Monkeyspeak.TriggerReader,Monkeyspeak.Libraries.TimerTask@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.Unload(Monkeyspeak.Page)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </summary>
      <param name="page">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>page</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.Unload(Monkeyspeak.Page)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Libraries.Timers.WhenTimerGoesOff(Monkeyspeak.TriggerReader)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.WhenTimerGoesOff(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </summary>
      <param name="reader">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reader</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.WhenTimerGoesOff(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Libraries.Timers.WhenTimerGoesOff(Monkeyspeak.TriggerReader)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Libraries.TimerTask">
      <summary>
            A TimerTask object contains Timer and Page Owner.  Timer is not started from a TimerTask constructor.
            </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.TimerTask.#ctor(Monkeyspeak.Page,System.Double,System.Double,System.Double)">
      <summary>
            Timer task that executes (0:300) when it triggers
            </summary>
      <param name="owner">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Monkeyspeak.Libraries.TimerTask.#ctor(Monkeyspeak.Page,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="interval">Interval in Seconds</param>
      <param name="id">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Monkeyspeak.Libraries.TimerTask.#ctor(Monkeyspeak.Page,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
      <param name="delay">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>delay</parameter>
            <parameter>M:Monkeyspeak.Libraries.TimerTask.#ctor(Monkeyspeak.Page,System.Double,System.Double,System.Double)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Monkeyspeak.Libraries.TimerTask.Delay">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Libraries.TimerTask.Delay</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.TimerTask.Dispose">
      <summary>
        <markup>
          <include item="SMCAutoDocDispose">
            <parameter>Monkeyspeak.Libraries.TimerTask</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Libraries.TimerTask.FirstRun">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Libraries.TimerTask.FirstRun</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Libraries.TimerTask.Id">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Libraries.TimerTask.Id</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Libraries.TimerTask.Interval">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Libraries.TimerTask.Interval</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Libraries.TimerTask.Owner">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Libraries.TimerTask.Owner</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.TimerTask.Start">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.TimerTask.Start</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.TimerTask.Stop">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.TimerTask.Stop</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Libraries.TimerTask.Timer">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Libraries.TimerTask.Timer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Libraries.TimerTask.timer_Elapsed(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Libraries.TimerTask.timer_Elapsed(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="sender">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:Monkeyspeak.Libraries.TimerTask.timer_Elapsed(System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.Logging.ConsoleLogOutput">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Logging.ConsoleLogOutput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.ConsoleLogOutput.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Logging.ConsoleLogOutput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.ConsoleLogOutput.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>Monkeyspeak.Logging.ConsoleLogOutput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.ConsoleLogOutput.BuildMessage(Monkeyspeak.Logging.LogMessage)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.ConsoleLogOutput.BuildMessage(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.ConsoleLogOutput.BuildMessage(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Logging.ConsoleLogOutput.BuildMessage(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Logging.ConsoleLogOutput.Log(Monkeyspeak.Logging.LogMessage)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.ConsoleLogOutput.Log(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </summary>
      <param name="logMsg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>logMsg</parameter>
            <parameter>M:Monkeyspeak.Logging.ConsoleLogOutput.Log(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.Logging.DebuggerLogOutput">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Logging.DebuggerLogOutput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.DebuggerLogOutput.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Logging.DebuggerLogOutput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.DebuggerLogOutput.Log(Monkeyspeak.Logging.LogMessage)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.DebuggerLogOutput.Log(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </summary>
      <param name="logMsg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>logMsg</parameter>
            <parameter>M:Monkeyspeak.Logging.DebuggerLogOutput.Log(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.Logging.ILogOutput">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Logging.ILogOutput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.ILogOutput.Log(Monkeyspeak.Logging.LogMessage)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.ILogOutput.Log(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </summary>
      <param name="logMsg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>logMsg</parameter>
            <parameter>M:Monkeyspeak.Logging.ILogOutput.Log(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="T:Monkeyspeak.Logging.Level">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Logging.Level</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.Logging.Logger">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Logging.Logger</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>Monkeyspeak.Logging.Logger</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Assert(System.Boolean,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Assert(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="cond">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cond</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Assert(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="failMsg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>failMsg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Assert(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Assert(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Assert``1(System.Boolean,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Assert``1(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="cond">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cond</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Assert``1(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="failMsg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>failMsg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Assert``1(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Assert``1(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Assert``1(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Debug(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Debug(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Debug(System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Debug``1(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Debug``1(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Debug``1(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Debug``1(System.Object)</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="P:Monkeyspeak.Logging.Logger.DebugEnabled">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Logging.Logger.DebugEnabled</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.DebugFormat(System.String,System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.DebugFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="format">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>format</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.DebugFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.DebugFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.DebugFormat``1(System.String,System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.DebugFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="format">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>format</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.DebugFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.DebugFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.DebugFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Error(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Error(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Error(System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Error``1(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Error``1(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Error``1(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Error``1(System.Object)</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="P:Monkeyspeak.Logging.Logger.ErrorEnabled">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Logging.Logger.ErrorEnabled</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.ErrorFormat(System.String,System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.ErrorFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="format">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>format</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.ErrorFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.ErrorFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.ErrorFormat``1(System.String,System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.ErrorFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="format">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>format</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.ErrorFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.ErrorFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.ErrorFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Fails(System.Boolean,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Fails(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="cond">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cond</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Fails(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="failMsg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>failMsg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Fails(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Fails(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Fails``1(System.Boolean,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Fails``1(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="cond">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cond</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Fails``1(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="failMsg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>failMsg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Fails``1(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Fails``1(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Fails``1(System.Boolean,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Info(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Info(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Info(System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Info``1(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Info``1(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Info``1(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Info``1(System.Object)</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="P:Monkeyspeak.Logging.Logger.InfoEnabled">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Logging.Logger.InfoEnabled</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.InfoFormat(System.String,System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.InfoFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="format">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>format</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.InfoFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.InfoFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.InfoFormat``1(System.String,System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.InfoFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="format">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>format</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.InfoFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.InfoFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.InfoFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Log(Monkeyspeak.Logging.LogMessage)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Log(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Log(Monkeyspeak.Logging.LogMessage)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Monkeyspeak.Logging.Logger.LogOutput">
      <summary>
            Sets the <see cref="T:Monkeyspeak.Logging.ILogOutput" />.
            </summary>
      <param name="output">The output.</param>
      <exception cref="T:System.ArgumentNullException">output</exception>
    </member>
    <member name="P:Monkeyspeak.Logging.Logger.MessagesExpire">
      <summary>
            Gets or sets the messages expire time limit.
            Messages that have expired are removed from history.
            This property used in conjunction with SupressSpam = true prevents
            too much memory from being used over time
            </summary>
    </member>
    <member name="F:Monkeyspeak.Logging.Logger.queue">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Logging.Logger.queue</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Logging.Logger.SuppressSpam">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Logging.Logger.SuppressSpam</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Warn(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Warn(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Warn(System.Object)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.Warn``1(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Warn``1(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Warn``1(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.Warn``1(System.Object)</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.WarnFormat(System.String,System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.WarnFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="format">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>format</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.WarnFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.WarnFormat(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Logging.Logger.WarnFormat``1(System.String,System.Object[])">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.WarnFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </summary>
      <param name="format">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>format</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.WarnFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <param name="args">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.WarnFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Logging.Logger.WarnFormat``1(System.String,System.Object[])</parameter>
          </include>
        </markup>
      </typeparam>
    </member>
    <member name="P:Monkeyspeak.Logging.Logger.WarningEnabled">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Logging.Logger.WarningEnabled</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:Monkeyspeak.Logging.LogMessage">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Logging.LogMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.LogMessage.#ctor(Monkeyspeak.Logging.Level,System.String,System.TimeSpan)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Logging.LogMessage</parameter>
          </include>
        </markup>
      </summary>
      <param name="level">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>level</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.#ctor(Monkeyspeak.Logging.Level,System.String,System.TimeSpan)</parameter>
          </include>
        </markup>
      </param>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.#ctor(Monkeyspeak.Logging.Level,System.String,System.TimeSpan)</parameter>
          </include>
        </markup>
      </param>
      <param name="expireDuration">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>expireDuration</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.#ctor(Monkeyspeak.Logging.Level,System.String,System.TimeSpan)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Logging.LogMessage.#cctor">
      <summary>
        <markup>
          <include item="SMCAutoDocStaticConstructor">
            <parameter>Monkeyspeak.Logging.LogMessage</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.LogMessage.Equals(System.Object)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.Equals(System.Object)</parameter>
          </include>
        </markup>
      </summary>
      <param name="obj">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.Equals(System.Object)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.Equals(System.Object)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Logging.LogMessage.From(Monkeyspeak.Logging.Level,System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.From(Monkeyspeak.Logging.Level,System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="level">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>level</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.From(Monkeyspeak.Logging.Level,System.String)</parameter>
          </include>
        </markup>
      </param>
      <param name="msg">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>msg</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.From(Monkeyspeak.Logging.Level,System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.From(Monkeyspeak.Logging.Level,System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Logging.LogMessage.GetHashCode">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.GetHashCode</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.GetHashCode</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="P:Monkeyspeak.Logging.LogMessage.IsEmpty">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Logging.LogMessage.IsEmpty</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Logging.LogMessage.IsSpam">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Logging.LogMessage.IsSpam</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Monkeyspeak.Logging.LogMessage.Level">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>P:Monkeyspeak.Logging.LogMessage.Level</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:Monkeyspeak.Logging.LogMessage.message">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>F:Monkeyspeak.Logging.LogMessage.message</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Logging.LogMessage.ToString">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.ToString</parameter>
          </include>
        </markup>
      </summary>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Logging.LogMessage.ToString</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Utils.ReflectionHelper">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>T:Monkeyspeak.Utils.ReflectionHelper</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Utils.ReflectionHelper.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Utils.ReflectionHelper</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Monkeyspeak.Utils.ReflectionHelper.GetAllAttributesFromMethod``1(System.Reflection.MethodInfo)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllAttributesFromMethod``1(System.Reflection.MethodInfo)</parameter>
          </include>
        </markup>
      </summary>
      <param name="methodInfo">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>methodInfo</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllAttributesFromMethod``1(System.Reflection.MethodInfo)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllAttributesFromMethod``1(System.Reflection.MethodInfo)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllAttributesFromMethod``1(System.Reflection.MethodInfo)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Utils.ReflectionHelper.GetAllMethods(System.Type)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllMethods(System.Type)</parameter>
          </include>
        </markup>
      </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllMethods(System.Type)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllMethods(System.Type)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Utils.ReflectionHelper.GetAllTypesWithAttributeInMembers``1(System.Reflection.Assembly)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllTypesWithAttributeInMembers``1(System.Reflection.Assembly)</parameter>
          </include>
        </markup>
      </summary>
      <param name="assembly">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>assembly</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllTypesWithAttributeInMembers``1(System.Reflection.Assembly)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllTypesWithAttributeInMembers``1(System.Reflection.Assembly)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllTypesWithAttributeInMembers``1(System.Reflection.Assembly)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Utils.ReflectionHelper.GetAllTypesWithBaseClass``1(System.Reflection.Assembly)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllTypesWithBaseClass``1(System.Reflection.Assembly)</parameter>
          </include>
        </markup>
      </summary>
      <param name="asm">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>asm</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllTypesWithBaseClass``1(System.Reflection.Assembly)</parameter>
          </include>
        </markup>
      </param>
      <typeparam name="T">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllTypesWithBaseClass``1(System.Reflection.Assembly)</parameter>
          </include>
        </markup>
      </typeparam>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.GetAllTypesWithBaseClass``1(System.Reflection.Assembly)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Utils.ReflectionHelper.HasNoArgConstructor(System.Type)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.HasNoArgConstructor(System.Type)</parameter>
          </include>
        </markup>
      </summary>
      <param name="type">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.HasNoArgConstructor(System.Type)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.HasNoArgConstructor(System.Type)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="M:Monkeyspeak.Utils.ReflectionHelper.TryLoad(System.String,System.Reflection.Assembly@)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.TryLoad(System.String,System.Reflection.Assembly@)</parameter>
          </include>
        </markup>
      </summary>
      <param name="assemblyFile">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>assemblyFile</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.TryLoad(System.String,System.Reflection.Assembly@)</parameter>
          </include>
        </markup>
      </param>
      <param name="asm">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>asm</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.TryLoad(System.String,System.Reflection.Assembly@)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Utils.ReflectionHelper.TryLoad(System.String,System.Reflection.Assembly@)</parameter>
          </include>
        </markup>
      </returns>
    </member>
    <member name="T:Monkeyspeak.Utils.TriggerIntegrityUpdater">
      <summary>
             Reads triggers from a stream and updates those trigger's to reflect the library's trigger description.
             This is useful if you have a trigger handler that was changed but it isn't reflected on the script itself.
            
             Caution: This is a intensive operation due to analyzing and replacing any characters in the code that don't match up.
             Use sparingly.
             </summary>
    </member>
    <member name="M:Monkeyspeak.Utils.TriggerIntegrityUpdater.#ctor(Monkeyspeak.MonkeyspeakEngine)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Monkeyspeak.Utils.TriggerIntegrityUpdater</parameter>
          </include>
        </markup>
      </summary>
      <param name="engine">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>engine</parameter>
            <parameter>M:Monkeyspeak.Utils.TriggerIntegrityUpdater.#ctor(Monkeyspeak.MonkeyspeakEngine)</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="M:Monkeyspeak.Utils.TriggerIntegrityUpdater.UpdateTriggers(System.String)">
      <summary>
        <markup>
          <include item="SMCMissingTag">
            <parameter>summary</parameter>
            <parameter>M:Monkeyspeak.Utils.TriggerIntegrityUpdater.UpdateTriggers(System.String)</parameter>
          </include>
        </markup>
      </summary>
      <param name="code">
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>code</parameter>
            <parameter>M:Monkeyspeak.Utils.TriggerIntegrityUpdater.UpdateTriggers(System.String)</parameter>
          </include>
        </markup>
      </param>
      <returns>
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Monkeyspeak.Utils.TriggerIntegrityUpdater.UpdateTriggers(System.String)</parameter>
          </include>
        </markup>
      </returns>
    </member>
  </members>
</doc>